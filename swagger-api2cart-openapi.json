{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "API2Cart",
        "description": "A unified integration point to interact with 30+ shopping carts, that extends the pool of potential clients with 1 million of e-store owners.\t\t\t\t\t",
        "termsOfService": "https:\/\/api2cart.com\/terms-service"
    },
    "servers": [
        "httpsapi.api2cart.com\/v1.1",
        "http:\/\/api.api2cart.com\/v1.1"
    ],
    "paths": {
        "\/webhook.create.json": {
            "post": {
                "summary": "Post Webhook Create",
                "description": "Create webhook on the store and subscribe to it.",
                "operationId": "WebhookCreate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "entity",
                        "in": "query",
                        "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Callback where the webhook should send the POST request when the event occurs"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "The name you give to the webhook"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields the webhook should send"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Webhook status"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/webhook.list.json": {
            "get": {
                "summary": "Get Webhook List",
                "description": "List registered webhook on the store.",
                "operationId": "WebhookList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "entity",
                        "in": "query",
                        "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Webhook status"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of \u0441omma-separated webhook ids"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/webhook.count.json": {
            "get": {
                "summary": "Get Webhook Count",
                "description": "Count registered webhooks on the store.",
                "operationId": "WebhookCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "entity",
                        "in": "query",
                        "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Webhook status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/webhook.events.json": {
            "get": {
                "summary": "Get Webhook Events",
                "description": "List all Webhooks that are available on this store.",
                "operationId": "WebhookEvents",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/webhook.delete.json": {
            "delete": {
                "summary": "Delete Webhook Delete",
                "description": "Delete registered webhook on the store.",
                "operationId": "WebhookDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/webhook.update.json": {
            "put": {
                "summary": "Put Webhook Update",
                "description": "Update Webhooks parameters.",
                "operationId": "WebhookUpdate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Callback where the webhook should send the POST request when the event occurs"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "The name you give to the webhook"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields the webhook should send"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Webhook status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.create.json": {
            "post": {
                "summary": "Post Cart Create",
                "description": "Add store to the account",
                "operationId": "CartCreate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cart_id",
                        "in": "query",
                        "description": "Store\u2019s identifier which you can get from cart_list method"
                    },
                    {
                        "name": "store_url",
                        "in": "query",
                        "description": "A web address of a store that you would like to connect to API2Cart"
                    },
                    {
                        "name": "bridge_url",
                        "in": "query",
                        "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)"
                    },
                    {
                        "name": "store_root",
                        "in": "query",
                        "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)"
                    },
                    {
                        "name": "store_key",
                        "in": "query",
                        "description": "Set this parameter if bridge is already uploaded to store"
                    },
                    {
                        "name": "shared_secret",
                        "in": "query",
                        "description": "Shared secret"
                    },
                    {
                        "name": "validate_version",
                        "in": "query",
                        "description": "Specify if api2cart should validate cart version"
                    },
                    {
                        "name": "verify",
                        "in": "query",
                        "description": "Enables or disables cart's verification"
                    },
                    {
                        "name": "db_tables_prefix",
                        "in": "query",
                        "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update"
                    },
                    {
                        "name": "ftp_host",
                        "in": "query",
                        "description": "FTP connection host"
                    },
                    {
                        "name": "ftp_user",
                        "in": "query",
                        "description": "FTP User"
                    },
                    {
                        "name": "ftp_password",
                        "in": "query",
                        "description": "FTP Password"
                    },
                    {
                        "name": "ftp_port",
                        "in": "query",
                        "description": "FTP Port"
                    },
                    {
                        "name": "ftp_store_dir",
                        "in": "query",
                        "description": "FTP Store dir"
                    },
                    {
                        "name": "apiKey_3dcart",
                        "in": "query",
                        "description": "3DCart API Key"
                    },
                    {
                        "name": "AdminAccount",
                        "in": "query",
                        "description": "It's a BigCommerce account for which API is enabled"
                    },
                    {
                        "name": "ApiPath",
                        "in": "query",
                        "description": "BigCommerce API URL"
                    },
                    {
                        "name": "ApiKey",
                        "in": "query",
                        "description": "Bigcommerce API Key"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "Client ID of the requesting app"
                    },
                    {
                        "name": "accessToken",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "context",
                        "in": "query",
                        "description": "API Path section unique to the store"
                    },
                    {
                        "name": "access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "apiKey_shopify",
                        "in": "query",
                        "description": "Shopify API Key"
                    },
                    {
                        "name": "apiPassword",
                        "in": "query",
                        "description": "Shopify API Password"
                    },
                    {
                        "name": "accessToken_shopify",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "apiUsername",
                        "in": "query",
                        "description": "Neto User Name"
                    },
                    {
                        "name": "EncryptedPassword",
                        "in": "query",
                        "description": "Volusion API Password"
                    },
                    {
                        "name": "Login",
                        "in": "query",
                        "description": "It's a Volusion account for which API is enabled"
                    },
                    {
                        "name": "apiUser_adnsf",
                        "in": "query",
                        "description": "It's a AspDotNetStorefront account for which API is available"
                    },
                    {
                        "name": "apiPass",
                        "in": "query",
                        "description": "AspDotNetStorefront API Password"
                    },
                    {
                        "name": "accessKey_scelite",
                        "in": "query",
                        "description": "Shopping Cart Elite Access Key"
                    },
                    {
                        "name": "apiKey_scelite",
                        "in": "query",
                        "description": "Shopping Cart Elite API Key"
                    },
                    {
                        "name": "apiSecretKey_scelite",
                        "in": "query",
                        "description": "Shopping Cart Elite API Secret Key"
                    },
                    {
                        "name": "privateKey",
                        "in": "query",
                        "description": "3DCart Application Private Key"
                    },
                    {
                        "name": "appToken",
                        "in": "query",
                        "description": "3DCart Token from Application"
                    },
                    {
                        "name": "etsy_keystring",
                        "in": "query",
                        "description": "Etsy keystring"
                    },
                    {
                        "name": "etsy_shared_secret",
                        "in": "query",
                        "description": "Etsy shared secret"
                    },
                    {
                        "name": "tokenSecret",
                        "in": "query",
                        "description": "Secret token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "ebay_client_id",
                        "in": "query",
                        "description": "Application ID (AppID)."
                    },
                    {
                        "name": "ebay_client_secret",
                        "in": "query",
                        "description": "Shared Secret from eBay application"
                    },
                    {
                        "name": "ebay_runame",
                        "in": "query",
                        "description": "The RuName value that eBay assigns to your application."
                    },
                    {
                        "name": "ebay_access_token",
                        "in": "query",
                        "description": "Used to authenticate API requests."
                    },
                    {
                        "name": "ebay_refresh_token",
                        "in": "query",
                        "description": "Used to renew the access token."
                    },
                    {
                        "name": "ebay_environment",
                        "in": "query",
                        "description": "eBay environment"
                    },
                    {
                        "name": "ebay_site_id",
                        "in": "query",
                        "description": "eBay global ID"
                    },
                    {
                        "name": "dw_client_id",
                        "in": "query",
                        "description": "Demandware client id"
                    },
                    {
                        "name": "dw_api_pass",
                        "in": "query",
                        "description": "Demandware api password"
                    },
                    {
                        "name": "demandware_user_name",
                        "in": "query",
                        "description": "Demandware user name"
                    },
                    {
                        "name": "demandware_user_password",
                        "in": "query",
                        "description": "Demandware user password"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "seller_id",
                        "in": "query",
                        "description": "Seller Id"
                    },
                    {
                        "name": "amazon_secret_key",
                        "in": "query",
                        "description": "Amazon Secret Key"
                    },
                    {
                        "name": "amazon_access_key_id",
                        "in": "query",
                        "description": "Amazon Secret Key Id"
                    },
                    {
                        "name": "marketplaces_ids",
                        "in": "query",
                        "description": "Comma separated marketplaces ids"
                    },
                    {
                        "name": "environment",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "hybris_client_id",
                        "in": "query",
                        "description": "Omni Commerce Connector Client ID"
                    },
                    {
                        "name": "hybris_client_secret",
                        "in": "query",
                        "description": "Omni Commerce Connector Client Secret"
                    },
                    {
                        "name": "walmart_client_id",
                        "in": "query",
                        "description": "Walmart client ID"
                    },
                    {
                        "name": "walmart_client_secret",
                        "in": "query",
                        "description": "Walmart client secret"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.validate.json": {
            "get": {
                "summary": "Get Cart Validate",
                "description": "Check store availability, bridge connection for the downloadable carts, identify DB prefix, validate API accesses for API carts.",
                "operationId": "CartValidate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "validate_version",
                        "in": "query",
                        "description": "Specify if api2cart should validate cart version"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.list.json": {
            "get": {
                "summary": "Get Cart List",
                "description": "Get list of supported carts",
                "operationId": "CartList",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.bridge.json": {
            "get": {
                "summary": "Get Cart Bridge",
                "description": "Get bridge key and store key",
                "operationId": "CartBridge",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.delete.json": {
            "delete": {
                "summary": "Delete Cart Delete",
                "description": "Remove store from API2Cart",
                "operationId": "CartDelete",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.disconnect.json": {
            "get": {
                "summary": "Get Cart Disconnect",
                "description": "Disconnect with the store and clear store session data.",
                "operationId": "CartDisconnect",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "delete_bridge",
                        "in": "query",
                        "description": "Identifies if there is a necessity to delete bridge"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.methods.json": {
            "get": {
                "summary": "Get Cart Methods",
                "description": "Get list of cart methods",
                "operationId": "CartMethods",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.config.json": {
            "get": {
                "summary": "Get Cart Config",
                "description": "Get list of cart configs",
                "operationId": "CartConfig",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.config.update.json": {
            "put": {
                "summary": "Put Cart Config Update",
                "description": "Use this API method to update custom data in client database.",
                "operationId": "CartConfigUpdate",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.coupon.count.json": {
            "get": {
                "summary": "Get Cart Coupon Count",
                "description": "Get cart coupons count.",
                "operationId": "CartCouponCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "date_start_from",
                        "in": "query",
                        "description": "Filter entity by date_start (greater or equal)"
                    },
                    {
                        "name": "date_start_to",
                        "in": "query",
                        "description": "Filter entity by date_start (less or equal)"
                    },
                    {
                        "name": "date_end_from",
                        "in": "query",
                        "description": "Filter entity by date_end (greater or equal)"
                    },
                    {
                        "name": "date_end_to",
                        "in": "query",
                        "description": "Filter entity by date_end (less or equal)"
                    },
                    {
                        "name": "avail",
                        "in": "query",
                        "description": "Defines category's visibility status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.coupon.list.json": {
            "get": {
                "summary": "Get Cart Coupon List",
                "description": "Get cart coupon discounts.",
                "operationId": "CartCouponList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "coupons_ids",
                        "in": "query",
                        "description": "Filter coupons by ids"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "date_start_from",
                        "in": "query",
                        "description": "Filter entity by date_start (greater or equal)"
                    },
                    {
                        "name": "date_start_to",
                        "in": "query",
                        "description": "Filter entity by date_start (less or equal)"
                    },
                    {
                        "name": "date_end_from",
                        "in": "query",
                        "description": "Filter entity by date_end (greater or equal)"
                    },
                    {
                        "name": "date_end_to",
                        "in": "query",
                        "description": "Filter entity by date_end (less or equal)"
                    },
                    {
                        "name": "avail",
                        "in": "query",
                        "description": "Defines category's visibility status"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.giftcard.count.json": {
            "get": {
                "summary": "Get Cart Giftcard Count",
                "description": "Get gift cards count.",
                "operationId": "CartGiftcardCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.giftcard.list.json": {
            "get": {
                "summary": "Get Cart Giftcard List",
                "description": "Get gift cards list.",
                "operationId": "CartGiftcardList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.giftcard.add.json": {
            "post": {
                "summary": "Post Cart Giftcard Add",
                "description": "Create new gift card",
                "operationId": "CartGiftcardAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Defines the gift card amount value."
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Gift card code"
                    },
                    {
                        "name": "owner_email",
                        "in": "query",
                        "description": "Gift card owner email"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.coupon.add.json": {
            "post": {
                "summary": "Post Cart Coupon Add",
                "description": "Create new coupon",
                "operationId": "CartCouponAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Gift card code"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "codes",
                        "in": "query",
                        "description": "Entity codes"
                    },
                    {
                        "name": "action_type",
                        "in": "query",
                        "description": "Coupon discount type"
                    },
                    {
                        "name": "action_apply_to",
                        "in": "query",
                        "description": "Defines where discount should be applied"
                    },
                    {
                        "name": "action_scope",
                        "in": "query",
                        "description": "Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once."
                    },
                    {
                        "name": "action_amount",
                        "in": "query",
                        "description": "Defines the discount amount value."
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Defines when discount code will be available."
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "Defines when discount code will be expired."
                    },
                    {
                        "name": "usage_limit",
                        "in": "query",
                        "description": "Usage limit for coupon."
                    },
                    {
                        "name": "usage_limit_per_customer",
                        "in": "query",
                        "description": "Usage limit per customer."
                    },
                    {
                        "name": "action_condition_entity",
                        "in": "query",
                        "description": "Defines entity for action condition."
                    },
                    {
                        "name": "action_condition_key",
                        "in": "query",
                        "description": "Defines entity attribute code for action condition."
                    },
                    {
                        "name": "action_condition_operator",
                        "in": "query",
                        "description": "Defines condition operator."
                    },
                    {
                        "name": "action_condition_value",
                        "in": "query",
                        "description": "Defines condition attribute value\/s. Can be comma separated string."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.coupon.condition.add.json": {
            "post": {
                "summary": "Post Cart Coupon Condition Add",
                "description": "Create new coupon condition",
                "operationId": "CartCouponConditionAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "coupon_id",
                        "in": "query",
                        "description": "Coupon Id"
                    },
                    {
                        "name": "target",
                        "in": "query",
                        "description": "Defines condition operator"
                    },
                    {
                        "name": "entity",
                        "in": "query",
                        "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Defines condition entity attribute key"
                    },
                    {
                        "name": "operator",
                        "in": "query",
                        "description": "Defines condition operator"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Defines condition value, can be comma separated according to the operator."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.coupon.delete.json": {
            "delete": {
                "summary": "Delete Cart Coupon Delete",
                "description": "Delete coupon",
                "operationId": "CartCouponDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.script.list.json": {
            "get": {
                "summary": "Get Cart Script List",
                "description": "Get scripts installed to the storefront",
                "operationId": "CartScriptList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "script_ids",
                        "in": "query",
                        "description": "Retrieves only scripts with specific ids"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.script.add.json": {
            "post": {
                "summary": "Post Cart Script Add",
                "description": "Add new script to the storefront",
                "operationId": "CartScriptAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The user-friendly description"
                    },
                    {
                        "name": "html",
                        "in": "query",
                        "description": "An html string containing exactly one `script` tag."
                    },
                    {
                        "name": "src",
                        "in": "query",
                        "description": "The URL of the remote script"
                    },
                    {
                        "name": "load_method",
                        "in": "query",
                        "description": "The load method to use for the script"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "The page or pages on the online store where the script should be included"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.script.delete.json": {
            "delete": {
                "summary": "Delete Cart Script Delete",
                "description": "Remove script from the storefront",
                "operationId": "CartScriptDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.info.json": {
            "get": {
                "summary": "Get Cart Info",
                "description": "Get cart information",
                "operationId": "CartInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.clear_cache.json": {
            "post": {
                "summary": "Post Cart Clear Cache",
                "description": "Clear cache on store.",
                "operationId": "CartClearCache",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cache_type",
                        "in": "query",
                        "description": "Defines which cache should be cleared."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.plugin.list.json": {
            "get": {
                "summary": "Get Cart Plugin List",
                "description": "Get list of installed plugins",
                "operationId": "CartPluginList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_key",
                        "in": "query",
                        "description": "Set this parameter if bridge is already uploaded to store"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/cart.shipping_zones.list.json": {
            "get": {
                "summary": "Get Cart Shipping Zones List",
                "description": "Get list of shipping zones",
                "operationId": "CartShippingZonesList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/account.cart.list.json": {
            "get": {
                "summary": "Get Account Cart List",
                "description": "Get list of carts.",
                "operationId": "AccountCartList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "request_from_date",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "request_to_date",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "store_url",
                        "in": "query",
                        "description": "A web address of a store that you would like to connect to API2Cart"
                    },
                    {
                        "name": "store_key",
                        "in": "query",
                        "description": "Set this parameter if bridge is already uploaded to store"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/account.cart.add.json": {
            "post": {
                "summary": "Post Account Cart Add",
                "description": "Add store to the account",
                "operationId": "AccountCartAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cart_id",
                        "in": "query",
                        "description": "Store\u2019s identifier which you can get from cart_list method"
                    },
                    {
                        "name": "store_url",
                        "in": "query",
                        "description": "A web address of a store that you would like to connect to API2Cart"
                    },
                    {
                        "name": "bridge_url",
                        "in": "query",
                        "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)"
                    },
                    {
                        "name": "store_root",
                        "in": "query",
                        "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)"
                    },
                    {
                        "name": "store_key",
                        "in": "query",
                        "description": "Set this parameter if bridge is already uploaded to store"
                    },
                    {
                        "name": "validate_version",
                        "in": "query",
                        "description": "Specify if api2cart should validate cart version"
                    },
                    {
                        "name": "verify",
                        "in": "query",
                        "description": "Enables or disables cart's verification"
                    },
                    {
                        "name": "db_tables_prefix",
                        "in": "query",
                        "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update"
                    },
                    {
                        "name": "ftp_host",
                        "in": "query",
                        "description": "FTP connection host"
                    },
                    {
                        "name": "ftp_user",
                        "in": "query",
                        "description": "FTP User"
                    },
                    {
                        "name": "ftp_password",
                        "in": "query",
                        "description": "FTP Password"
                    },
                    {
                        "name": "ftp_port",
                        "in": "query",
                        "description": "FTP Port"
                    },
                    {
                        "name": "ftp_store_dir",
                        "in": "query",
                        "description": "FTP Store dir"
                    },
                    {
                        "name": "3dcartapi_api_key",
                        "in": "query",
                        "description": "3DCart API Key"
                    },
                    {
                        "name": "amazon_access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "amazon_seller_id",
                        "in": "query",
                        "description": "Seller Id"
                    },
                    {
                        "name": "amazon_marketplaces_ids",
                        "in": "query",
                        "description": "Comma separated marketplaces ids"
                    },
                    {
                        "name": "amazon_secret_key",
                        "in": "query",
                        "description": "Amazon Secret Key"
                    },
                    {
                        "name": "amazon_access_key_id",
                        "in": "query",
                        "description": "Amazon Secret Key Id"
                    },
                    {
                        "name": "aspdotnetstorefront_api_user",
                        "in": "query",
                        "description": "It's a AspDotNetStorefront account for which API is available"
                    },
                    {
                        "name": "aspdotnetstorefront_api_pass",
                        "in": "query",
                        "description": "AspDotNetStorefront API Password"
                    },
                    {
                        "name": "bigcommerceapi_admin_account",
                        "in": "query",
                        "description": "It's a BigCommerce account for which API is enabled"
                    },
                    {
                        "name": "bigcommerceapi_api_path",
                        "in": "query",
                        "description": "BigCommerce API URL"
                    },
                    {
                        "name": "bigcommerceapi_api_key",
                        "in": "query",
                        "description": "Bigcommerce API Key"
                    },
                    {
                        "name": "bigcommerceapi_client_id",
                        "in": "query",
                        "description": "Client ID of the requesting app"
                    },
                    {
                        "name": "bigcommerceapi_access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "bigcommerceapi_context",
                        "in": "query",
                        "description": "API Path section unique to the store"
                    },
                    {
                        "name": "demandware_client_id",
                        "in": "query",
                        "description": "Demandware client id"
                    },
                    {
                        "name": "demandware_api_password",
                        "in": "query",
                        "description": "Demandware api password"
                    },
                    {
                        "name": "demandware_user_name",
                        "in": "query",
                        "description": "Demandware user name"
                    },
                    {
                        "name": "demandware_user_password",
                        "in": "query",
                        "description": "Demandware user password"
                    },
                    {
                        "name": "demandware_env_type",
                        "in": "query",
                        "description": "Demandware environment"
                    },
                    {
                        "name": "ebay_client_id",
                        "in": "query",
                        "description": "Application ID (AppID)."
                    },
                    {
                        "name": "ebay_client_secret",
                        "in": "query",
                        "description": "Shared Secret from eBay application"
                    },
                    {
                        "name": "ebay_runame",
                        "in": "query",
                        "description": "The RuName value that eBay assigns to your application."
                    },
                    {
                        "name": "ebay_access_token",
                        "in": "query",
                        "description": "Used to authenticate API requests."
                    },
                    {
                        "name": "ebay_refresh_token",
                        "in": "query",
                        "description": "Used to renew the access token."
                    },
                    {
                        "name": "ebay_environment",
                        "in": "query",
                        "description": "eBay environment"
                    },
                    {
                        "name": "ebay_site_id",
                        "in": "query",
                        "description": "eBay global ID"
                    },
                    {
                        "name": "walmart_client_id",
                        "in": "query",
                        "description": "Walmart client ID"
                    },
                    {
                        "name": "walmart_client_secret",
                        "in": "query",
                        "description": "Walmart client secret"
                    },
                    {
                        "name": "ecwid_acess_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "ecwid_store_id",
                        "in": "query",
                        "description": "Store Id"
                    },
                    {
                        "name": "etsy_keystring",
                        "in": "query",
                        "description": "Etsy keystring"
                    },
                    {
                        "name": "etsy_shared_secret",
                        "in": "query",
                        "description": "Etsy shared secret"
                    },
                    {
                        "name": "etsy_access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "etsy_token_secret",
                        "in": "query",
                        "description": "Secret token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "neto_api_key",
                        "in": "query",
                        "description": "Neto API Key"
                    },
                    {
                        "name": "neto_api_username",
                        "in": "query",
                        "description": "Neto User Name"
                    },
                    {
                        "name": "shopify_api_key",
                        "in": "query",
                        "description": "Shopify API Key"
                    },
                    {
                        "name": "shopify_api_password",
                        "in": "query",
                        "description": "Shopify API Password"
                    },
                    {
                        "name": "shopify_shared_secret",
                        "in": "query",
                        "description": "Shared secret"
                    },
                    {
                        "name": "shopify_access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "volusion_login",
                        "in": "query",
                        "description": "It's a Volusion account for which API is enabled"
                    },
                    {
                        "name": "volusion_password",
                        "in": "query",
                        "description": "Volusion API Password"
                    },
                    {
                        "name": "hybris_client_id",
                        "in": "query",
                        "description": "Omni Commerce Connector Client ID"
                    },
                    {
                        "name": "hybris_client_secret",
                        "in": "query",
                        "description": "Omni Commerce Connector Client Secret"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/account.config.update.json": {
            "put": {
                "summary": "Put Account Config Update",
                "description": "Update configs in the API2Cart database.",
                "operationId": "AccountConfigUpdate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "new_store_key",
                        "in": "query",
                        "description": "Update store key"
                    },
                    {
                        "name": "bridge_url",
                        "in": "query",
                        "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)"
                    },
                    {
                        "name": "store_root",
                        "in": "query",
                        "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)"
                    },
                    {
                        "name": "db_tables_prefix",
                        "in": "query",
                        "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update"
                    },
                    {
                        "name": "3dcartapi_api_key",
                        "in": "query",
                        "description": "3DCart API Key"
                    },
                    {
                        "name": "amazon_access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "amazon_seller_id",
                        "in": "query",
                        "description": "Seller Id"
                    },
                    {
                        "name": "amazon_marketplaces_ids",
                        "in": "query",
                        "description": "Comma separated marketplaces ids"
                    },
                    {
                        "name": "amazon_secret_key",
                        "in": "query",
                        "description": "Amazon Secret Key"
                    },
                    {
                        "name": "amazon_access_key_id",
                        "in": "query",
                        "description": "Amazon Secret Key Id"
                    },
                    {
                        "name": "aspdotnetstorefront_api_user",
                        "in": "query",
                        "description": "It's a AspDotNetStorefront account for which API is available"
                    },
                    {
                        "name": "aspdotnetstorefront_api_pass",
                        "in": "query",
                        "description": "AspDotNetStorefront API Password"
                    },
                    {
                        "name": "bigcommerceapi_admin_account",
                        "in": "query",
                        "description": "It's a BigCommerce account for which API is enabled"
                    },
                    {
                        "name": "bigcommerceapi_api_path",
                        "in": "query",
                        "description": "BigCommerce API URL"
                    },
                    {
                        "name": "bigcommerceapi_api_key",
                        "in": "query",
                        "description": "Bigcommerce API Key"
                    },
                    {
                        "name": "bigcommerceapi_client_id",
                        "in": "query",
                        "description": "Client ID of the requesting app"
                    },
                    {
                        "name": "bigcommerceapi_access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "bigcommerceapi_context",
                        "in": "query",
                        "description": "API Path section unique to the store"
                    },
                    {
                        "name": "demandware_client_id",
                        "in": "query",
                        "description": "Demandware client id"
                    },
                    {
                        "name": "demandware_api_password",
                        "in": "query",
                        "description": "Demandware api password"
                    },
                    {
                        "name": "demandware_user_name",
                        "in": "query",
                        "description": "Demandware user name"
                    },
                    {
                        "name": "demandware_user_password",
                        "in": "query",
                        "description": "Demandware user password"
                    },
                    {
                        "name": "demandware_env_type",
                        "in": "query",
                        "description": "Demandware environment"
                    },
                    {
                        "name": "ebay_client_id",
                        "in": "query",
                        "description": "Application ID (AppID)."
                    },
                    {
                        "name": "ebay_client_secret",
                        "in": "query",
                        "description": "Shared Secret from eBay application"
                    },
                    {
                        "name": "ebay_runame",
                        "in": "query",
                        "description": "The RuName value that eBay assigns to your application."
                    },
                    {
                        "name": "ebay_access_token",
                        "in": "query",
                        "description": "Used to authenticate API requests."
                    },
                    {
                        "name": "ebay_refresh_token",
                        "in": "query",
                        "description": "Used to renew the access token."
                    },
                    {
                        "name": "ebay_environment",
                        "in": "query",
                        "description": "eBay environment"
                    },
                    {
                        "name": "ebay_site_id",
                        "in": "query",
                        "description": "eBay global ID"
                    },
                    {
                        "name": "ecwid_acess_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "ecwid_store_id",
                        "in": "query",
                        "description": "Store Id"
                    },
                    {
                        "name": "etsy_keystring",
                        "in": "query",
                        "description": "Etsy keystring"
                    },
                    {
                        "name": "etsy_shared_secret",
                        "in": "query",
                        "description": "Etsy shared secret"
                    },
                    {
                        "name": "etsy_access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "etsy_token_secret",
                        "in": "query",
                        "description": "Secret token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "neto_api_key",
                        "in": "query",
                        "description": "Neto API Key"
                    },
                    {
                        "name": "neto_api_username",
                        "in": "query",
                        "description": "Neto User Name"
                    },
                    {
                        "name": "shopify_api_key",
                        "in": "query",
                        "description": "Shopify API Key"
                    },
                    {
                        "name": "shopify_api_password",
                        "in": "query",
                        "description": "Shopify API Password"
                    },
                    {
                        "name": "shopify_shared_secret",
                        "in": "query",
                        "description": "Shared secret"
                    },
                    {
                        "name": "shopify_access_token",
                        "in": "query",
                        "description": "Access token authorizing the app to access resources on behalf of a user"
                    },
                    {
                        "name": "volusion_login",
                        "in": "query",
                        "description": "It's a Volusion account for which API is enabled"
                    },
                    {
                        "name": "volusion_password",
                        "in": "query",
                        "description": "Volusion API Password"
                    },
                    {
                        "name": "walmart_client_id",
                        "in": "query",
                        "description": "Walmart client ID"
                    },
                    {
                        "name": "walmart_client_secret",
                        "in": "query",
                        "description": "Walmart client secret"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "Client ID of the requesting app"
                    },
                    {
                        "name": "shared_secret",
                        "in": "query",
                        "description": "Shared secret"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/account.failed_webhooks.json": {
            "get": {
                "summary": "Get Account Failed Webhooks",
                "description": "List webhooks that was not delivered to the callback.",
                "operationId": "AccountFailedWebhooks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of \u0441omma-separated webhook ids"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/account.supported_platforms.json": {
            "get": {
                "summary": "Get Account Supported Platforms",
                "description": "Get list of supported platforms",
                "operationId": "AccountSupportedPlatforms",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/bridge.download.file": {
            "get": {
                "summary": "Get Bridge Download File",
                "description": "Download bridge for store",
                "operationId": "BridgeDownload",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "whitelabel",
                        "in": "query",
                        "description": "Identifies if there is a necessity to download whitelabel bridge."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/bridge.update.json": {
            "post": {
                "summary": "Post Bridge Update",
                "description": "Update bridge in the store.",
                "operationId": "BridgeUpdate",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/bridge.delete.json": {
            "post": {
                "summary": "Post Bridge Delete",
                "description": "Delete bridge from the store.",
                "operationId": "BridgeDelete",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.list.json": {
            "get": {
                "summary": "Get Product List",
                "description": "Get list of products from your store. Returns 10 products by default.",
                "operationId": "ProductList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Retrieves products specified by category id"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "avail_view",
                        "in": "query",
                        "description": "Specifies the set of visible\/invisible products"
                    },
                    {
                        "name": "avail_sale",
                        "in": "query",
                        "description": "Specifies the set of available\/not available products for sale"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "currency_id",
                        "in": "query",
                        "description": "Currency Id"
                    },
                    {
                        "name": "product_ids",
                        "in": "query",
                        "description": "Retrieves products specified by product ids"
                    },
                    {
                        "name": "product_variant_params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which product variants fields you want to retrieve"
                    },
                    {
                        "name": "since_id",
                        "in": "query",
                        "description": "Retrieve products starting from the specified product id"
                    },
                    {
                        "name": "report_request_id",
                        "in": "query",
                        "description": "Report request id"
                    },
                    {
                        "name": "disable_report_cache",
                        "in": "query",
                        "description": "Disable report cache for current request"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Set field to sort by"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Set sorting direction"
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Filter by product's sku"
                    },
                    {
                        "name": "disable_cache",
                        "in": "query",
                        "description": "Disable cache for current request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.count.json": {
            "get": {
                "summary": "Get Product Count",
                "description": "Count products in store.",
                "operationId": "ProductCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Retrieves products specified by category id"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "avail_view",
                        "in": "query",
                        "description": "Specifies the set of visible\/invisible products"
                    },
                    {
                        "name": "avail_sale",
                        "in": "query",
                        "description": "Specifies the set of available\/not available products for sale"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "product_ids",
                        "in": "query",
                        "description": "Retrieves products specified by product ids"
                    },
                    {
                        "name": "report_request_id",
                        "in": "query",
                        "description": "Report request id"
                    },
                    {
                        "name": "disable_report_cache",
                        "in": "query",
                        "description": "Disable report cache for current request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.info.json": {
            "get": {
                "summary": "Get Product Info",
                "description": "Get product info about product ID *** or specify other product ID.",
                "operationId": "ProductInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "currency_id",
                        "in": "query",
                        "description": "Currency Id"
                    },
                    {
                        "name": "product_variant_params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which product variants fields you want to retrieve"
                    },
                    {
                        "name": "report_request_id",
                        "in": "query",
                        "description": "Report request id"
                    },
                    {
                        "name": "disable_report_cache",
                        "in": "query",
                        "description": "Disable report cache for current request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.find.json": {
            "get": {
                "summary": "Get Product Find",
                "description": "Search product in store catalog. \"Apple\" is specified here by default.",
                "operationId": "ProductFind",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "find_value",
                        "in": "query",
                        "description": "Entity search that is specified by some value"
                    },
                    {
                        "name": "find_where",
                        "in": "query",
                        "description": "Entity search that is specified by the comma-separated unique fields"
                    },
                    {
                        "name": "find_params",
                        "in": "query",
                        "description": "Entity search that is specified by comma-separated parameters"
                    },
                    {
                        "name": "find_what",
                        "in": "query",
                        "description": "Parameter's value specifies the entity that has to be found"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.fields.json": {
            "get": {
                "summary": "Get Product Fields",
                "description": "Retrieve all available fields for product item in store.",
                "operationId": "ProductFields",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.add.json": {
            "post": {
                "summary": "Post Product Add",
                "description": "Add new product to store.",
                "operationId": "ProductAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.update.json": {
            "put": {
                "summary": "Put Product Update",
                "description": "Update price and quantity for a specific product",
                "operationId": "ProductUpdate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "Defines product model that has to be updated"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Defines new product's price"
                    },
                    {
                        "name": "special_price",
                        "in": "query",
                        "description": "Defines new product's special price"
                    },
                    {
                        "name": "sprice_create",
                        "in": "query",
                        "description": "Defines the date of special price creation"
                    },
                    {
                        "name": "sprice_expire",
                        "in": "query",
                        "description": "Defines the term of special price offer duration"
                    },
                    {
                        "name": "cost_price",
                        "in": "query",
                        "description": "Defines new product's cost price"
                    },
                    {
                        "name": "retail_price",
                        "in": "query",
                        "description": "Defines new product's retail price"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Defines new product's quantity"
                    },
                    {
                        "name": "weight",
                        "in": "query",
                        "description": "Weight"
                    },
                    {
                        "name": "increase_quantity",
                        "in": "query",
                        "description": "Defines the incremental changes in product quantity"
                    },
                    {
                        "name": "reduce_quantity",
                        "in": "query",
                        "description": "Defines the decrement changes in product quantity"
                    },
                    {
                        "name": "warehouse_id",
                        "in": "query",
                        "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity."
                    },
                    {
                        "name": "reserve_quantity",
                        "in": "query",
                        "description": "This parameter allows to reserve\/unreserve product quantity."
                    },
                    {
                        "name": "manage_stock",
                        "in": "query",
                        "description": "Defines inventory tracking for product"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Filter by product's sku"
                    },
                    {
                        "name": "visible",
                        "in": "query",
                        "description": "Set visibility status"
                    },
                    {
                        "name": "manufacturer",
                        "in": "query",
                        "description": "Defines product's manufacturer"
                    },
                    {
                        "name": "manufacturer_id",
                        "in": "query",
                        "description": "Defines product's manufacturer by manufacturer_id"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The user-friendly description"
                    },
                    {
                        "name": "short_description",
                        "in": "query",
                        "description": "Defines short description"
                    },
                    {
                        "name": "meta_title",
                        "in": "query",
                        "description": "Defines unique meta title for each entity"
                    },
                    {
                        "name": "meta_keywords",
                        "in": "query",
                        "description": "Defines unique meta keywords for each entity"
                    },
                    {
                        "name": "meta_description",
                        "in": "query",
                        "description": "Defines unique meta description of a entity"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "in_stock",
                        "in": "query",
                        "description": "Set stock status"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Defines product's status"
                    },
                    {
                        "name": "seo_url",
                        "in": "query",
                        "description": "Defines unique URL for SEO"
                    },
                    {
                        "name": "report_request_id",
                        "in": "query",
                        "description": "Report request id"
                    },
                    {
                        "name": "disable_report_cache",
                        "in": "query",
                        "description": "Disable report cache for current request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.delete.json": {
            "delete": {
                "summary": "Delete Product Delete",
                "description": "Product delete",
                "operationId": "ProductDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.price.add.json": {
            "post": {
                "summary": "Post Product Price Add",
                "description": "Add some prices to the product.",
                "operationId": "ProductPriceAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.price.update.json": {
            "put": {
                "summary": "Put Product Price Update",
                "description": "Update some prices of the product.",
                "operationId": "ProductPriceUpdate",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.price.delete.json": {
            "delete": {
                "summary": "Delete Product Price Delete",
                "description": "Delete some prices of the product",
                "operationId": "ProductPriceDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "group_prices",
                        "in": "query",
                        "description": "Defines product's group prices"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.image.add.json": {
            "post": {
                "summary": "Post Product Image Add",
                "description": "Add image to product",
                "operationId": "ProductImageAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "image_name",
                        "in": "query",
                        "description": "Defines image's name"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Defines image's types that are specified by comma-separated list"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "Defines URL of the image that has to be added"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "The name you give to the webhook"
                    },
                    {
                        "name": "mime",
                        "in": "query",
                        "description": "Mime type of image http:\/\/en.wikipedia.org\/wiki\/Internet_media_type."
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "Defines image\u2019s position in the list"
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "Content(body) encoded in base64 of image file"
                    },
                    {
                        "name": "product_variant_id",
                        "in": "query",
                        "description": "Defines product's variants specified by variant id"
                    },
                    {
                        "name": "variant_ids",
                        "in": "query",
                        "description": "Defines product's variants ids"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.image.update.json": {
            "put": {
                "summary": "Put Product Image Update",
                "description": "Update details of image",
                "operationId": "ProductImageUpdate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "image_name",
                        "in": "query",
                        "description": "Defines image's name"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Defines image's types that are specified by comma-separated list"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "The name you give to the webhook"
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "Defines image\u2019s position in the list"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "hidden",
                        "in": "query",
                        "description": "Define is hide image"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.image.delete.json": {
            "delete": {
                "summary": "Delete Product Image Delete",
                "description": "Delete image",
                "operationId": "ProductImageDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.list.json": {
            "get": {
                "summary": "Get Category List",
                "description": "Get list of categories from store. Returns 4 categories by default.",
                "operationId": "CategoryList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Retrieves categories specified by parent id"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.count.json": {
            "get": {
                "summary": "Get Category Count",
                "description": "Count categories in store.",
                "operationId": "CategoryCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Retrieves categories specified by parent id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.info.json": {
            "get": {
                "summary": "Get Category Info",
                "description": "Get category info about category ID*** or specify other category ID.",
                "operationId": "CategoryInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.find.json": {
            "get": {
                "summary": "Get Category Find",
                "description": "Search category in store. \"Laptop\" is specified here by default.",
                "operationId": "CategoryFind",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "find_value",
                        "in": "query",
                        "description": "Entity search that is specified by some value"
                    },
                    {
                        "name": "find_where",
                        "in": "query",
                        "description": "Entity search that is specified by the comma-separated unique fields"
                    },
                    {
                        "name": "find_params",
                        "in": "query",
                        "description": "Entity search that is specified by comma-separated parameters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.add.json": {
            "post": {
                "summary": "Post Category Add",
                "description": "Add new category in store",
                "operationId": "CategoryAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Retrieves categories specified by parent id"
                    },
                    {
                        "name": "stores_ids",
                        "in": "query",
                        "description": "Create category in the stores that is specified by comma-separated stores' id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "avail",
                        "in": "query",
                        "description": "Defines category's visibility status"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort number in the list"
                    },
                    {
                        "name": "created_time",
                        "in": "query",
                        "description": "Entity's date creation"
                    },
                    {
                        "name": "modified_time",
                        "in": "query",
                        "description": "Entity's date modification"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The user-friendly description"
                    },
                    {
                        "name": "meta_title",
                        "in": "query",
                        "description": "Defines unique meta title for each entity"
                    },
                    {
                        "name": "meta_description",
                        "in": "query",
                        "description": "Defines unique meta description of a entity"
                    },
                    {
                        "name": "meta_keywords",
                        "in": "query",
                        "description": "Defines unique meta keywords for each entity"
                    },
                    {
                        "name": "seo_url",
                        "in": "query",
                        "description": "Defines unique URL for SEO"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.update.json": {
            "put": {
                "summary": "Put Category Update",
                "description": "Update category in store",
                "operationId": "CategoryUpdate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Retrieves categories specified by parent id"
                    },
                    {
                        "name": "stores_ids",
                        "in": "query",
                        "description": "Create category in the stores that is specified by comma-separated stores' id"
                    },
                    {
                        "name": "avail",
                        "in": "query",
                        "description": "Defines category's visibility status"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort number in the list"
                    },
                    {
                        "name": "modified_time",
                        "in": "query",
                        "description": "Entity's date modification"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The user-friendly description"
                    },
                    {
                        "name": "meta_title",
                        "in": "query",
                        "description": "Defines unique meta title for each entity"
                    },
                    {
                        "name": "meta_description",
                        "in": "query",
                        "description": "Defines unique meta description of a entity"
                    },
                    {
                        "name": "meta_keywords",
                        "in": "query",
                        "description": "Defines unique meta keywords for each entity"
                    },
                    {
                        "name": "seo_url",
                        "in": "query",
                        "description": "Defines unique URL for SEO"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.delete.json": {
            "delete": {
                "summary": "Delete Category Delete",
                "description": "Delete category in store",
                "operationId": "CategoryDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.assign.json": {
            "post": {
                "summary": "Post Category Assign",
                "description": "Assign category to product",
                "operationId": "CategoryAssign",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Retrieves products specified by category id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.unassign.json": {
            "post": {
                "summary": "Post Category Unassign",
                "description": "Unassign category to product",
                "operationId": "CategoryUnassign",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Retrieves products specified by category id"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.image.add.json": {
            "post": {
                "summary": "Post Category Image Add",
                "description": "Add image to category",
                "operationId": "CategoryImageAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Retrieves products specified by category id"
                    },
                    {
                        "name": "image_name",
                        "in": "query",
                        "description": "Defines image's name"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "Defines URL of the image that has to be added"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "The name you give to the webhook"
                    },
                    {
                        "name": "mime",
                        "in": "query",
                        "description": "Mime type of image http:\/\/en.wikipedia.org\/wiki\/Internet_media_type."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Defines image's types that are specified by comma-separated list"
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "Defines image\u2019s position in the list"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/category.image.delete.json": {
            "delete": {
                "summary": "Delete Category Image Delete",
                "description": "Delete image",
                "operationId": "CategoryImageDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Retrieves products specified by category id"
                    },
                    {
                        "name": "image_id",
                        "in": "query",
                        "description": "Define image id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.count.json": {
            "get": {
                "summary": "Get Order Count",
                "description": "Count orders in store",
                "operationId": "OrderCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer id"
                    },
                    {
                        "name": "customer_email",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer email"
                    },
                    {
                        "name": "order_status",
                        "in": "query",
                        "description": "Counts orders quantity specified by order status"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of \u0441omma-separated webhook ids"
                    },
                    {
                        "name": "order_ids",
                        "in": "query",
                        "description": "Counts orders specified by order ids"
                    },
                    {
                        "name": "financial_status",
                        "in": "query",
                        "description": "Counts orders quantity specified by financial status"
                    },
                    {
                        "name": "fulfillment_status",
                        "in": "query",
                        "description": "Create order with fulfillment status"
                    },
                    {
                        "name": "shipping_method",
                        "in": "query",
                        "description": "Retrieve entities according to shipping method"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.list.json": {
            "get": {
                "summary": "Get Order List",
                "description": "Get list of orders from store. Returns 4 orders by default.",
                "operationId": "OrderList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer id"
                    },
                    {
                        "name": "customer_email",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer email"
                    },
                    {
                        "name": "order_status",
                        "in": "query",
                        "description": "Counts orders quantity specified by order status"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Set field to sort by"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Set sorting direction"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of \u0441omma-separated webhook ids"
                    },
                    {
                        "name": "order_ids",
                        "in": "query",
                        "description": "Counts orders specified by order ids"
                    },
                    {
                        "name": "basket_id",
                        "in": "query",
                        "description": "Retrieves order\u2019s info specified by basket id."
                    },
                    {
                        "name": "financial_status",
                        "in": "query",
                        "description": "Counts orders quantity specified by financial status"
                    },
                    {
                        "name": "fulfillment_status",
                        "in": "query",
                        "description": "Create order with fulfillment status"
                    },
                    {
                        "name": "shipping_method",
                        "in": "query",
                        "description": "Retrieve entities according to shipping method"
                    },
                    {
                        "name": "skip_order_ids",
                        "in": "query",
                        "description": "Skipped orders by ids"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.info.json": {
            "get": {
                "summary": "Get Order Info",
                "description": "Info about a specific order by ID",
                "operationId": "OrderInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Retrieves order\u2019s info specified by order id"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.find.json": {
            "get": {
                "summary": "Get Order Find",
                "description": "Find orders",
                "operationId": "OrderFind",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer id"
                    },
                    {
                        "name": "customer_email",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer email"
                    },
                    {
                        "name": "order_status",
                        "in": "query",
                        "description": "Counts orders quantity specified by order status"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "financial_status",
                        "in": "query",
                        "description": "Counts orders quantity specified by financial status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.add.json": {
            "post": {
                "summary": "Post Order Add",
                "description": "Add a new order to the cart.",
                "operationId": "OrderAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.update.json": {
            "put": {
                "summary": "Put Order Update",
                "description": "Update existing order.",
                "operationId": "OrderUpdate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Retrieves order\u2019s info specified by order id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "order_status",
                        "in": "query",
                        "description": "Counts orders quantity specified by order status"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Specifies order comment"
                    },
                    {
                        "name": "date_modified",
                        "in": "query",
                        "description": "Specifies order's  modification date"
                    },
                    {
                        "name": "date_finished",
                        "in": "query",
                        "description": "Specifies order's  finished date"
                    },
                    {
                        "name": "financial_status",
                        "in": "query",
                        "description": "Counts orders quantity specified by financial status"
                    },
                    {
                        "name": "order_payment_method",
                        "in": "query",
                        "description": "Defines order payment method"
                    },
                    {
                        "name": "send_notifications",
                        "in": "query",
                        "description": "Send notifications to customer after order was created"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.status.list.json": {
            "get": {
                "summary": "Get Order Status List",
                "description": "Retrieve list of statuses",
                "operationId": "OrderStatusList",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.financial_status.list.json": {
            "get": {
                "summary": "Get Order Financial Status List",
                "description": "Retrieve list of financial statuses",
                "operationId": "OrderFinancialStatusList",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.abandoned.list.json": {
            "get": {
                "summary": "Get Order Abandoned List",
                "description": "Get list of orders that were left by customers before completing the order.",
                "operationId": "OrderAbandonedList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "customer_id",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer id"
                    },
                    {
                        "name": "customer_email",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer email"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "skip_empty_email",
                        "in": "query",
                        "description": "Filter empty emails"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.shipment.list.json": {
            "get": {
                "summary": "Get Order Shipment List",
                "description": "Get list of shipments by orders.",
                "operationId": "OrderShipmentList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "query",
                        "description": "Retrieves order\u2019s info specified by order id"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.shipment.add.json": {
            "post": {
                "summary": "Post Order Shipment Add",
                "description": "Add a shipment to the order.",
                "operationId": "OrderShipmentAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.shipment.update.json": {
            "put": {
                "summary": "Put Order Shipment Update",
                "description": "Update order's shipment information.",
                "operationId": "OrderShipmentUpdate",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.shipment.tracking.add.json": {
            "post": {
                "summary": "Post Order Shipment Tracking Add",
                "description": "Add order shipment's tracking info.",
                "operationId": "OrderShipmentTrackingAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/order.refund.add.json": {
            "post": {
                "summary": "Post Order Refund Add",
                "description": "Add a refund to the order.",
                "operationId": "OrderRefundAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/basket.live_shipping_service.list.json": {
            "get": {
                "summary": "Get Basket Live Shipping Service List",
                "description": "Retrieve a list of live shipping rate services. (Beta)",
                "operationId": "BasketLiveShippingServiceList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/basket.info.json": {
            "get": {
                "summary": "Get Basket Info",
                "description": "Retrieve basket information.",
                "operationId": "BasketInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/basket.live_shipping_service.create.json": {
            "post": {
                "summary": "Post Basket Live Shipping Service Create",
                "description": "Create live shipping rate service. (Beta)",
                "operationId": "BasketLiveShippingServiceCreate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "Callback where the webhook should send the POST request when the event occurs"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/basket.live_shipping_service.delete.json": {
            "delete": {
                "summary": "Delete Basket Live Shipping Service Delete",
                "description": "Delete live shipping rate service. (Beta)",
                "operationId": "BasketLiveShippingServiceDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/customer.list.json": {
            "get": {
                "summary": "Get Customer List",
                "description": "Get list of customers from store.",
                "operationId": "CustomerList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Customer group_id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "customer_list_id",
                        "in": "query",
                        "description": "The numeric ID of the customer list in Demandware."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/customer.count.json": {
            "get": {
                "summary": "Get Customer Count",
                "description": "Get number of customers from store.",
                "operationId": "CustomerCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Customer group_id"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "customer_list_id",
                        "in": "query",
                        "description": "The numeric ID of the customer list in Demandware."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/customer.info.json": {
            "get": {
                "summary": "Get Customer Info",
                "description": "Get customers' details from store.",
                "operationId": "CustomerInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/customer.find.json": {
            "get": {
                "summary": "Get Customer Find",
                "description": "Find customers in store.",
                "operationId": "CustomerFind",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "find_value",
                        "in": "query",
                        "description": "Entity search that is specified by some value"
                    },
                    {
                        "name": "find_where",
                        "in": "query",
                        "description": "Entity search that is specified by the comma-separated unique fields"
                    },
                    {
                        "name": "find_params",
                        "in": "query",
                        "description": "Entity search that is specified by comma-separated parameters"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/customer.add.json": {
            "post": {
                "summary": "Post Customer Add",
                "description": "Add customer into store.",
                "operationId": "CustomerAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.list.json": {
            "get": {
                "summary": "Get Attribute List",
                "description": "Get attributes list",
                "operationId": "AttributeList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Defines image's types that are specified by comma-separated list"
                    },
                    {
                        "name": "attribute_ids",
                        "in": "query",
                        "description": "Filter attributes by ids"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "visible",
                        "in": "query",
                        "description": "Set visibility status"
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "description": "Defines if the option is required"
                    },
                    {
                        "name": "system",
                        "in": "query",
                        "description": "True if attribute is system"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.info.json": {
            "get": {
                "summary": "Get Attribute Info",
                "description": "Get attribute info",
                "operationId": "AttributeInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.count.json": {
            "get": {
                "summary": "Get Attribute Count",
                "description": "Get attributes count",
                "operationId": "AttributeCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Defines image's types that are specified by comma-separated list"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "visible",
                        "in": "query",
                        "description": "Set visibility status"
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "description": "Defines if the option is required"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.type.list.json": {
            "get": {
                "summary": "Get Attribute Type List",
                "description": "Get list of supported attributes types",
                "operationId": "AttributeTypeList",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.delete.json": {
            "delete": {
                "summary": "Delete Attribute Delete",
                "description": "Delete attribute from store",
                "operationId": "AttributeDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.add.json": {
            "post": {
                "summary": "Post Attribute Add",
                "description": "Add new attribute",
                "operationId": "AttributeAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Defines image's types that are specified by comma-separated list"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "visible",
                        "in": "query",
                        "description": "Set visibility status"
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "description": "Defines if the option is required"
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "description": "Defines image\u2019s position in the list"
                    },
                    {
                        "name": "is_global",
                        "in": "query",
                        "description": "Attribute saving scope"
                    },
                    {
                        "name": "is_searchable",
                        "in": "query",
                        "description": "Use attribute in Quick Search"
                    },
                    {
                        "name": "is_filterable",
                        "in": "query",
                        "description": "Use In Layered Navigation"
                    },
                    {
                        "name": "is_comparable",
                        "in": "query",
                        "description": "Comparable on Front-end"
                    },
                    {
                        "name": "is_html_allowed_on_front",
                        "in": "query",
                        "description": "Allow HTML Tags on Frontend"
                    },
                    {
                        "name": "is_filterable_in_search",
                        "in": "query",
                        "description": "Use In Search Results Layered Navigation"
                    },
                    {
                        "name": "is_configurable",
                        "in": "query",
                        "description": "Use To Create Configurable Product"
                    },
                    {
                        "name": "is_visible_in_advanced_search",
                        "in": "query",
                        "description": "Use in Advanced Search"
                    },
                    {
                        "name": "is_used_for_promo_rules",
                        "in": "query",
                        "description": "Use for Promo Rule Conditions"
                    },
                    {
                        "name": "used_in_product_listing",
                        "in": "query",
                        "description": "Used in Product Listing"
                    },
                    {
                        "name": "used_for_sort_by",
                        "in": "query",
                        "description": "Used for Sorting in Product Listing"
                    },
                    {
                        "name": "apply_to",
                        "in": "query",
                        "description": "Types of products which can have this attribute"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.assign.group.json": {
            "post": {
                "summary": "Post Attribute Assign Group",
                "description": "Assign attribute to the group",
                "operationId": "AttributeAssignGroup",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Customer group_id"
                    },
                    {
                        "name": "attribute_set_id",
                        "in": "query",
                        "description": "Attribute set id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.assign.set.json": {
            "post": {
                "summary": "Post Attribute Assign Set",
                "description": "Assign attribute to the attribute set",
                "operationId": "AttributeAssignSet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Customer group_id"
                    },
                    {
                        "name": "attribute_set_id",
                        "in": "query",
                        "description": "Attribute set id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.unassign.group.json": {
            "post": {
                "summary": "Post Attribute Unassign Group",
                "description": "Unassign attribute from group",
                "operationId": "AttributeUnassignGroup",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Customer group_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.unassign.set.json": {
            "post": {
                "summary": "Post Attribute Unassign Set",
                "description": "Unassign attribute from attribute set",
                "operationId": "AttributeUnassignSet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "attribute_set_id",
                        "in": "query",
                        "description": "Attribute set id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.group.list.json": {
            "get": {
                "summary": "Get Attribute Group List",
                "description": "Get attribute group list",
                "operationId": "AttributeGroupList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "attribute_set_id",
                        "in": "query",
                        "description": "Attribute set id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/attribute.attributeset.list.json": {
            "get": {
                "summary": "Get Attribute Attributeset List",
                "description": "Get attribute_set list",
                "operationId": "AttributeAttributesetList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.attribute.list.json": {
            "get": {
                "summary": "Get Product Attribute List",
                "description": "Get list of attributes.",
                "operationId": "ProductAttributeList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Set field to sort by"
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Set sorting direction"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "attribute_id",
                        "in": "query",
                        "description": "Retrieves info for specified attribute_id"
                    },
                    {
                        "name": "attribute_group_id",
                        "in": "query",
                        "description": "Filter by attribute_group_id"
                    },
                    {
                        "name": "set_name",
                        "in": "query",
                        "description": "Retrieves attributes specified by set_name in Magento"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.attribute.value.set.json": {
            "post": {
                "summary": "Post Product Attribute Value Set",
                "description": "Set attribute value to product.",
                "operationId": "ProductAttributeValueSet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "attribute_id",
                        "in": "query",
                        "description": "Retrieves info for specified attribute_id"
                    },
                    {
                        "name": "attribute_group_id",
                        "in": "query",
                        "description": "Filter by attribute_group_id"
                    },
                    {
                        "name": "attribute_name",
                        "in": "query",
                        "description": "Define attribute name"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "Defines condition value, can be comma separated according to the operator."
                    },
                    {
                        "name": "value_id",
                        "in": "query",
                        "description": "Define attribute value id"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.option.add.json": {
            "post": {
                "summary": "Post Product Option Add",
                "description": "Add product option from store.",
                "operationId": "ProductOptionAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Defines image's types that are specified by comma-separated list"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "option_values",
                        "in": "query",
                        "description": "Defines option values that has to be added in Magento"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The user-friendly description"
                    },
                    {
                        "name": "avail",
                        "in": "query",
                        "description": "Defines category's visibility status"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort number in the list"
                    },
                    {
                        "name": "required",
                        "in": "query",
                        "description": "Defines if the option is required"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.option.list.json": {
            "get": {
                "summary": "Get Product Option List",
                "description": "Get list of options.",
                "operationId": "ProductOptionList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.option.assign.json": {
            "post": {
                "summary": "Post Product Option Assign",
                "description": "Assign option from product.",
                "operationId": "ProductOptionAssign",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "option_id",
                        "in": "query",
                        "description": "Defines option id which has to be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.option.value.add.json": {
            "post": {
                "summary": "Post Product Option Value Add",
                "description": "Add product option item from option.",
                "operationId": "ProductOptionValueAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "option_id",
                        "in": "query",
                        "description": "Defines option id which has to be assigned"
                    },
                    {
                        "name": "option_value",
                        "in": "query",
                        "description": "Defines option value that has to be added"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort number in the list"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.option.value.assign.json": {
            "post": {
                "summary": "Post Product Option Value Assign",
                "description": "Assign product option item from product.",
                "operationId": "ProductOptionValueAssign",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_option_id",
                        "in": "query",
                        "description": "Defines product's option id where the value has to be assigned"
                    },
                    {
                        "name": "option_value_id",
                        "in": "query",
                        "description": "Defines value id that has to be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.option.value.update.json": {
            "put": {
                "summary": "Put Product Option Value Update",
                "description": "Update product option item from option.",
                "operationId": "ProductOptionValueUpdate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "option_value_id",
                        "in": "query",
                        "description": "Defines value id that has to be assigned"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Defines new product's price"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Defines new product's quantity"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.review.list.json": {
            "get": {
                "summary": "Get Product Review List",
                "description": "Get reviews of a specific product.",
                "operationId": "ProductReviewList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of \u0441omma-separated webhook ids"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Defines product's status"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.add.json": {
            "post": {
                "summary": "Post Product Variant Add",
                "description": "Add variant to product.",
                "operationId": "ProductVariantAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "Defines product model that has to be updated"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Defines new product's price"
                    },
                    {
                        "name": "attributes",
                        "in": "query",
                        "description": "Defines variant's attributes list"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The user-friendly description"
                    },
                    {
                        "name": "special_price",
                        "in": "query",
                        "description": "Defines new product's special price"
                    },
                    {
                        "name": "sprice_create",
                        "in": "query",
                        "description": "Defines the date of special price creation"
                    },
                    {
                        "name": "sprice_modified",
                        "in": "query",
                        "description": "Defines the date of special price modification"
                    },
                    {
                        "name": "sprice_expire",
                        "in": "query",
                        "description": "Defines the term of special price offer duration"
                    },
                    {
                        "name": "available_for_view",
                        "in": "query",
                        "description": "Specifies the set of visible\/invisible product's variants for users"
                    },
                    {
                        "name": "available_for_sale",
                        "in": "query",
                        "description": "Specifies the set of visible\/invisible product's variants for sale"
                    },
                    {
                        "name": "weight",
                        "in": "query",
                        "description": "Weight"
                    },
                    {
                        "name": "short_description",
                        "in": "query",
                        "description": "Defines short description"
                    },
                    {
                        "name": "warehouse_id",
                        "in": "query",
                        "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity."
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Defines new product's quantity"
                    },
                    {
                        "name": "created_at",
                        "in": "query",
                        "description": "Defines the date of entity creation"
                    },
                    {
                        "name": "manufacturer",
                        "in": "query",
                        "description": "Defines product's manufacturer"
                    },
                    {
                        "name": "tax_class_id",
                        "in": "query",
                        "description": "Defines tax classes where entity has to be added"
                    },
                    {
                        "name": "meta_title",
                        "in": "query",
                        "description": "Defines unique meta title for each entity"
                    },
                    {
                        "name": "meta_keywords",
                        "in": "query",
                        "description": "Defines unique meta keywords for each entity"
                    },
                    {
                        "name": "meta_description",
                        "in": "query",
                        "description": "Defines unique meta description of a entity"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "Defines URL of the image that has to be added"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.child_item.info.json": {
            "get": {
                "summary": "Get Product Child Item Info",
                "description": "Get child for specific product.",
                "operationId": "ProductChildItemInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.child_item.list.json": {
            "get": {
                "summary": "Get Product Child Item List",
                "description": "Get child items list of specific product(s).",
                "operationId": "ProductChildItemList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "product_ids",
                        "in": "query",
                        "description": "Retrieves products specified by product ids"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "currency_id",
                        "in": "query",
                        "description": "Currency Id"
                    },
                    {
                        "name": "avail_sale",
                        "in": "query",
                        "description": "Specifies the set of available\/not available products for sale"
                    },
                    {
                        "name": "report_request_id",
                        "in": "query",
                        "description": "Report request id"
                    },
                    {
                        "name": "disable_report_cache",
                        "in": "query",
                        "description": "Disable report cache for current request"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.child_item.find.json": {
            "get": {
                "summary": "Get Product Child Item Find",
                "description": "Search product child item (bundled item or configurable product variant) in store catalog.",
                "operationId": "ProductChildItemFind",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "find_value",
                        "in": "query",
                        "description": "Entity search that is specified by some value"
                    },
                    {
                        "name": "find_where",
                        "in": "query",
                        "description": "Entity search that is specified by the comma-separated unique fields"
                    },
                    {
                        "name": "find_params",
                        "in": "query",
                        "description": "Entity search that is specified by comma-separated parameters"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.list.json": {
            "get": {
                "summary": "Get Product Variant List",
                "description": "Get list variants.",
                "operationId": "ProductVariantList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Retrieves products specified by category id"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.info.json": {
            "get": {
                "summary": "Get Product Variant Info",
                "description": "Get variant info.",
                "operationId": "ProductVariantInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.count.json": {
            "get": {
                "summary": "Get Product Variant Count",
                "description": "Get count variants.",
                "operationId": "ProductVariantCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Retrieves products specified by category id"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.update.json": {
            "put": {
                "summary": "Put Product Variant Update",
                "description": "Update variant.",
                "operationId": "ProductVariantUpdate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "warehouse_id",
                        "in": "query",
                        "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity."
                    },
                    {
                        "name": "reserve_quantity",
                        "in": "query",
                        "description": "This parameter allows to reserve\/unreserve product quantity."
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Defines new product's quantity"
                    },
                    {
                        "name": "increase_quantity",
                        "in": "query",
                        "description": "Defines the incremental changes in product quantity"
                    },
                    {
                        "name": "reduce_quantity",
                        "in": "query",
                        "description": "Defines the decrement changes in product quantity"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "description": "Defines new product's price"
                    },
                    {
                        "name": "special_price",
                        "in": "query",
                        "description": "Defines new product's special price"
                    },
                    {
                        "name": "sprice_create",
                        "in": "query",
                        "description": "Defines the date of special price creation"
                    },
                    {
                        "name": "sprice_expire",
                        "in": "query",
                        "description": "Defines the term of special price offer duration"
                    },
                    {
                        "name": "manage_stock",
                        "in": "query",
                        "description": "Defines inventory tracking for product"
                    },
                    {
                        "name": "in_stock",
                        "in": "query",
                        "description": "Set stock status"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "The user-friendly description"
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "Filter by product's sku"
                    },
                    {
                        "name": "meta_title",
                        "in": "query",
                        "description": "Defines unique meta title for each entity"
                    },
                    {
                        "name": "meta_description",
                        "in": "query",
                        "description": "Defines unique meta description of a entity"
                    },
                    {
                        "name": "meta_keywords",
                        "in": "query",
                        "description": "Defines unique meta keywords for each entity"
                    },
                    {
                        "name": "short_description",
                        "in": "query",
                        "description": "Defines short description"
                    },
                    {
                        "name": "visible",
                        "in": "query",
                        "description": "Set visibility status"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Defines product's status"
                    },
                    {
                        "name": "weight",
                        "in": "query",
                        "description": "Weight"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.delete.json": {
            "delete": {
                "summary": "Delete Product Variant Delete",
                "description": "Delete variant.",
                "operationId": "ProductVariantDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.price.add.json": {
            "post": {
                "summary": "Post Product Variant Price Add",
                "description": "Add some prices to the product variant.",
                "operationId": "ProductVariantPriceAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.price.update.json": {
            "put": {
                "summary": "Put Product Variant Price Update",
                "description": "Update some prices of the product variant.",
                "operationId": "ProductVariantPriceUpdate",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.variant.price.delete.json": {
            "delete": {
                "summary": "Delete Product Variant Price Delete",
                "description": "Delete some prices of the product variant.",
                "operationId": "ProductVariantPriceDelete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Webhook id"
                    },
                    {
                        "name": "group_prices",
                        "in": "query",
                        "description": "Defines product's group prices"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.tax.add.json": {
            "post": {
                "summary": "Post Product Tax Add",
                "description": "Add tax class and tax rate to store and assign to product.",
                "operationId": "ProductTaxAdd",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.manufacturer.add.json": {
            "post": {
                "summary": "Post Product Manufacturer Add",
                "description": "Add manufacturer to store and assign to product",
                "operationId": "ProductManufacturerAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "manufacturer",
                        "in": "query",
                        "description": "Defines product's manufacturer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.brand.list.json": {
            "get": {
                "summary": "Get Product Brand List",
                "description": "Get list of brands from your store.",
                "operationId": "ProductBrandList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "brand_ids",
                        "in": "query",
                        "description": "Retrieves brands specified by brand ids"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "lang_id",
                        "in": "query",
                        "description": "Language id"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "Retrieve entities from their creation date"
                    },
                    {
                        "name": "created_to",
                        "in": "query",
                        "description": "Retrieve entities to their creation date"
                    },
                    {
                        "name": "modified_from",
                        "in": "query",
                        "description": "Retrieve entities from their modification date"
                    },
                    {
                        "name": "modified_to",
                        "in": "query",
                        "description": "Retrieve entities to their modification date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.currency.add.json": {
            "post": {
                "summary": "Post Product Currency Add",
                "description": "Add currency and\/or set default in store",
                "operationId": "ProductCurrencyAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "Specifies standardized currency code"
                    },
                    {
                        "name": "rate",
                        "in": "query",
                        "description": "Defines the numerical identifier against to the major currency"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Coupon name"
                    },
                    {
                        "name": "avail",
                        "in": "query",
                        "description": "Defines category's visibility status"
                    },
                    {
                        "name": "symbol_left",
                        "in": "query",
                        "description": "Defines the symbol that is located before the currency"
                    },
                    {
                        "name": "symbol_right",
                        "in": "query",
                        "description": "Defines the symbol that is located after the currency"
                    },
                    {
                        "name": "default",
                        "in": "query",
                        "description": "Specifies currency's default meaning"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.currency.list.json": {
            "get": {
                "summary": "Get Product Currency List",
                "description": "Get list of currencies",
                "operationId": "ProductCurrencyList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    },
                    {
                        "name": "default",
                        "in": "query",
                        "description": "Specifies currency's default meaning"
                    },
                    {
                        "name": "avail",
                        "in": "query",
                        "description": "Defines category's visibility status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/product.store.assign.json": {
            "post": {
                "summary": "Post Product Store Assign",
                "description": "Assign product to store",
                "operationId": "ProductStoreAssign",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/tax.class.info.json": {
            "get": {
                "summary": "Get Tax Class Info",
                "description": "Get info about tax",
                "operationId": "TaxClassInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "tax_class_id",
                        "in": "query",
                        "description": "Defines tax classes where entity has to be added"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/basket.item.add.json": {
            "post": {
                "summary": "Post Basket Item Add",
                "description": "Add item to basket",
                "operationId": "BasketItemAdd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "query",
                        "description": "Counts orders quantity specified by customer id"
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Defines the product where the price has to be deleted"
                    },
                    {
                        "name": "variant_id",
                        "in": "query",
                        "description": "Defines product's variants specified by variant id"
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Defines new product's quantity"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/subscriber.list.json": {
            "get": {
                "summary": "Get Subscriber List",
                "description": "Get subscribers list",
                "operationId": "SubscriberList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "description": "This parameter sets the number from which you want to get entities"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250"
                    },
                    {
                        "name": "subscribed",
                        "in": "query",
                        "description": "Filter by subscription status"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Defines store id where the webhook should be assigned"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Filter subscribers by email"
                    },
                    {
                        "name": "params",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to retrieve"
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "\/bridge.download.json": {
            "get": {
                "summary": "Get Bridge Download",
                "description": "Download bridge for store",
                "operationId": "BridgeDownload",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Webhook": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "label": {
                        "description": "",
                        "type": "string"
                    },
                    "store_id": {
                        "description": "",
                        "type": "string"
                    },
                    "active": {
                        "description": "",
                        "type": "boolean"
                    },
                    "callback": {
                        "description": "",
                        "type": "string"
                    },
                    "fields": {
                        "description": "",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "",
                        "type": "string"
                    },
                    "entity": {
                        "description": "",
                        "type": "string"
                    },
                    "action": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "additional_fields": {
                "type": "object"
            },
            "custom_fields": {
                "type": "object"
            },
            "CartConfigUpdate": {
                "type": "object",
                "properties": {
                    "db_tables_prefix": {
                        "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                        "type": "string"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "store_id": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Coupon": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "codes": {
                        "description": "",
                        "type": "array"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "actions": {
                        "description": "",
                        "type": "array"
                    },
                    "date_start": {
                        "description": "",
                        "type": ""
                    },
                    "date_end": {
                        "description": "",
                        "type": ""
                    },
                    "avail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "priority": {
                        "description": "",
                        "type": "integer"
                    },
                    "used_times": {
                        "description": "",
                        "type": "integer"
                    },
                    "usage_limit": {
                        "description": "",
                        "type": "integer"
                    },
                    "usage_limit_per_customer": {
                        "description": "",
                        "type": "integer"
                    },
                    "logic_operator": {
                        "description": "",
                        "type": "string"
                    },
                    "conditions": {
                        "description": "",
                        "type": "array"
                    },
                    "usage_history": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "codes": {
                "type": "array"
            },
            "actions": {
                "type": "array"
            },
            "date_start": {
                "type": "object"
            },
            "date_end": {
                "type": "object"
            },
            "conditions": {
                "type": "array"
            },
            "usage_history": {
                "type": "array"
            },
            "Coupon_Code": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "used_times": {
                        "description": "",
                        "type": "integer"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Coupon_Action": {
                "type": "object",
                "properties": {
                    "scope": {
                        "description": "",
                        "type": "string"
                    },
                    "apply_to": {
                        "description": "",
                        "type": "string"
                    },
                    "amount": {
                        "description": "",
                        "type": "number"
                    },
                    "currency_code": {
                        "description": "",
                        "type": "string"
                    },
                    "include_tax": {
                        "description": "",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "discounted_quantity": {
                        "description": "",
                        "type": "number"
                    },
                    "discount_quantity_step": {
                        "description": "",
                        "type": "integer"
                    },
                    "logic_operator": {
                        "description": "",
                        "type": "string"
                    },
                    "conditions": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Coupon_Condition": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "entity": {
                        "description": "",
                        "type": "string"
                    },
                    "match_items": {
                        "description": "",
                        "type": "string"
                    },
                    "key": {
                        "description": "",
                        "type": "string"
                    },
                    "operator": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "logic_operator": {
                        "description": "",
                        "type": "string"
                    },
                    "sub-conditions": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "value_type": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "sub-conditions": {
                "type": "array"
            },
            "DateTime": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "format": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Coupon_History": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "amount": {
                        "description": "",
                        "type": "number"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "GiftCard": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "currency_code": {
                        "description": "",
                        "type": "string"
                    },
                    "amount": {
                        "description": "",
                        "type": "number"
                    },
                    "initial_amount": {
                        "description": "",
                        "type": "number"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "",
                        "type": "string"
                    },
                    "avail_to": {
                        "description": "",
                        "type": "string"
                    },
                    "free_product_ids": {
                        "description": "",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    },
                    "owner_email": {
                        "description": "",
                        "type": "string"
                    },
                    "recipient_email": {
                        "description": "",
                        "type": "string"
                    },
                    "owner_name": {
                        "description": "",
                        "type": "string"
                    },
                    "recipient_name": {
                        "description": "",
                        "type": "string"
                    },
                    "usage_history": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Script": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "src": {
                        "description": "",
                        "type": "string"
                    },
                    "scope": {
                        "description": "",
                        "type": "string"
                    },
                    "event": {
                        "description": "",
                        "type": "string"
                    },
                    "load_method": {
                        "description": "",
                        "type": "string"
                    },
                    "html": {
                        "description": "",
                        "type": "string"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "created_time": {
                        "description": "",
                        "type": ""
                    },
                    "modified_time": {
                        "description": "",
                        "type": ""
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Cart": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "version": {
                        "description": "",
                        "type": "string"
                    },
                    "db_prefix": {
                        "description": "",
                        "type": "string"
                    },
                    "stores_info": {
                        "description": "",
                        "type": "array"
                    },
                    "warehouses": {
                        "description": "",
                        "type": "array"
                    },
                    "shipping_zones": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "stores_info": {
                "type": "array"
            },
            "warehouses": {
                "type": "array"
            },
            "shipping_zones": {
                "type": "array"
            },
            "Cart_StoreInfo": {
                "type": "object",
                "properties": {
                    "store_id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "language": {
                        "description": "",
                        "type": "string"
                    },
                    "store_languages": {
                        "description": "",
                        "type": "array"
                    },
                    "currency": {
                        "description": "",
                        "type": ""
                    },
                    "store_currencies": {
                        "description": "",
                        "type": "array"
                    },
                    "timezone": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": "string"
                    },
                    "root_category_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "multi_store_url": {
                        "description": "",
                        "type": "string"
                    },
                    "active": {
                        "description": "",
                        "type": "boolean"
                    },
                    "weight_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "dimension_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "prices_include_tax": {
                        "description": "",
                        "type": "boolean"
                    },
                    "carrier_info": {
                        "description": "",
                        "type": "array"
                    },
                    "store_owner_info": {
                        "description": "",
                        "type": ""
                    },
                    "default_warehouse_id": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "Info": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "store_languages": {
                "type": "array"
            },
            "currency": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "iso3": {
                        "description": "",
                        "type": "string"
                    },
                    "symbol_left": {
                        "description": "",
                        "type": "string"
                    },
                    "symbol_right": {
                        "description": "",
                        "type": "string"
                    },
                    "rate": {
                        "description": "",
                        "type": "number"
                    },
                    "avail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "default": {
                        "description": "",
                        "type": "boolean"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "store_currencies": {
                "type": "array"
            },
            "carrier_info": {
                "type": "array"
            },
            "store_owner_info": {
                "type": "object"
            },
            "Language": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "iso_code": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Carrier": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "active": {
                        "description": "",
                        "type": "boolean"
                    },
                    "shipping_methods": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "shipping_methods": {
                "type": "array"
            },
            "Order_ShippingMethod": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Info": {
                "type": "object",
                "properties": {
                    "owner": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": "string"
                    },
                    "state": {
                        "description": "",
                        "type": "string"
                    },
                    "state_code": {
                        "description": "",
                        "type": "string"
                    },
                    "city": {
                        "description": "",
                        "type": "string"
                    },
                    "street_address": {
                        "description": "",
                        "type": "string"
                    },
                    "street_address_line_2": {
                        "description": "",
                        "type": "string"
                    },
                    "zip_code": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "phone": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Cart_Warehouse": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "avail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "address": {
                        "description": "",
                        "type": ""
                    },
                    "carriers_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "stores_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "Customer_Address": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "address": {
                "type": "array"
            },
            "carriers_ids": {
                "type": "array"
            },
            "stores_ids": {
                "type": "array"
            },
            "Customer_Address": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "",
                        "type": "string"
                    },
                    "address1": {
                        "description": "",
                        "type": "string"
                    },
                    "address2": {
                        "description": "",
                        "type": "string"
                    },
                    "phone": {
                        "description": "",
                        "type": "string"
                    },
                    "city": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": ""
                    },
                    "state": {
                        "description": "",
                        "type": ""
                    },
                    "company": {
                        "description": "",
                        "type": "string"
                    },
                    "fax": {
                        "description": "",
                        "type": "string"
                    },
                    "website": {
                        "description": "",
                        "type": "string"
                    },
                    "gender": {
                        "description": "",
                        "type": "string"
                    },
                    "region": {
                        "description": "",
                        "type": "string"
                    },
                    "default": {
                        "description": "",
                        "type": "boolean"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "country": {
                "type": "object",
                "properties": {
                    "code2": {
                        "description": "",
                        "type": "string"
                    },
                    "code3": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "state": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Cart_ShippingZone": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": "string"
                    },
                    "country_iso2_codes": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "country_iso2_codes": {
                "type": "array"
            },
            "PluginList": {
                "type": "object",
                "properties": {
                    "all_plugins": {
                        "description": "",
                        "type": "integer"
                    },
                    "plugins": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "plugins": {
                "type": "array"
            },
            "Plugin": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "active": {
                        "description": "",
                        "type": "boolean"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "u_model": {
                        "description": "",
                        "type": "string"
                    },
                    "u_sku": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "short_description": {
                        "description": "",
                        "type": "string"
                    },
                    "price": {
                        "description": "",
                        "type": "number"
                    },
                    "advanced_price": {
                        "description": "",
                        "type": "array"
                    },
                    "quantity": {
                        "description": "",
                        "type": "number"
                    },
                    "inventory": {
                        "description": "",
                        "type": "array"
                    },
                    "u_brand_id": {
                        "description": "",
                        "type": "string"
                    },
                    "u_brand": {
                        "description": "",
                        "type": "string"
                    },
                    "categories_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "stores_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "seo_url": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_title": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_keywords": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_description": {
                        "description": "",
                        "type": "string"
                    },
                    "avail_sale": {
                        "description": "",
                        "type": "boolean"
                    },
                    "avail_view": {
                        "description": "",
                        "type": "boolean"
                    },
                    "is_virtual": {
                        "description": "",
                        "type": "boolean"
                    },
                    "is_downloadable": {
                        "description": "",
                        "type": "boolean"
                    },
                    "weight": {
                        "description": "",
                        "type": "number"
                    },
                    "weight_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "",
                        "type": "integer"
                    },
                    "backorders": {
                        "description": "",
                        "type": "string"
                    },
                    "manage_stock": {
                        "description": "",
                        "type": "string"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "create_at": {
                        "description": "",
                        "type": ""
                    },
                    "modified_at": {
                        "description": "",
                        "type": ""
                    },
                    "tax_class_id": {
                        "description": "",
                        "type": "string"
                    },
                    "special_price": {
                        "description": "",
                        "type": ""
                    },
                    "tier_price": {
                        "description": "",
                        "type": "array"
                    },
                    "group_price": {
                        "description": "",
                        "type": "array"
                    },
                    "images": {
                        "description": "",
                        "type": "array"
                    },
                    "product_options": {
                        "description": "",
                        "type": "array"
                    },
                    "u_upc": {
                        "description": "",
                        "type": "string"
                    },
                    "u_mpn": {
                        "description": "",
                        "type": "string"
                    },
                    "related_products_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "dimensions_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "width": {
                        "description": "",
                        "type": "number"
                    },
                    "height": {
                        "description": "",
                        "type": "number"
                    },
                    "length": {
                        "description": "",
                        "type": "number"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "SpecialPrice": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "advanced_price": {
                "type": "array"
            },
            "inventory": {
                "type": "array"
            },
            "categories_ids": {
                "type": "array"
            },
            "special_price": {
                "type": "object"
            },
            "tier_price": {
                "type": "array"
            },
            "group_price": {
                "type": "array"
            },
            "images": {
                "type": "array"
            },
            "product_options": {
                "type": "array"
            },
            "related_products_ids": {
                "type": "array"
            },
            "Product_AdvancedPrice": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "number"
                    },
                    "avail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "group_id": {
                        "description": "",
                        "type": "string"
                    },
                    "quantity_from": {
                        "description": "",
                        "type": "number"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "start_time": {
                        "description": "",
                        "type": ""
                    },
                    "expire_time": {
                        "description": "",
                        "type": ""
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Product_Inventory": {
                "type": "object",
                "properties": {
                    "warehouse_id": {
                        "description": "",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "",
                        "type": "number"
                    },
                    "in_stock": {
                        "description": "",
                        "type": "boolean"
                    },
                    "priority": {
                        "description": "",
                        "type": "integer"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "SpecialPrice": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "",
                        "type": "number"
                    },
                    "avail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "created_at": {
                        "description": "",
                        "type": ""
                    },
                    "modified_at": {
                        "description": "",
                        "type": ""
                    },
                    "expired_at": {
                        "description": "",
                        "type": ""
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Product_TierPrice": {
                "type": "object",
                "properties": {
                    "qty": {
                        "description": "",
                        "type": "number"
                    },
                    "price": {
                        "description": "",
                        "type": "number"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Product_GroupPrice": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "group_id": {
                        "description": "",
                        "type": "string"
                    },
                    "price": {
                        "description": "",
                        "type": "number"
                    },
                    "store_id": {
                        "description": "",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "",
                        "type": "number"
                    },
                    "start_time": {
                        "description": "",
                        "type": "string"
                    },
                    "expire_time": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Image": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "http_path": {
                        "description": "",
                        "type": "string"
                    },
                    "file_name": {
                        "description": "",
                        "type": "string"
                    },
                    "mime-type": {
                        "description": "",
                        "type": "string"
                    },
                    "size": {
                        "description": "",
                        "type": "integer"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "create_at": {
                        "description": "",
                        "type": ""
                    },
                    "modified_at": {
                        "description": "",
                        "type": ""
                    },
                    "alt": {
                        "description": "",
                        "type": "string"
                    },
                    "avail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "sort_order": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Product_Option": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "product_option_id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "required": {
                        "description": "",
                        "type": "boolean"
                    },
                    "available": {
                        "description": "",
                        "type": "boolean"
                    },
                    "used_in_combination": {
                        "description": "",
                        "type": "boolean"
                    },
                    "option_items": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "option_items": {
                "type": "array"
            },
            "Product_Option_Item": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "product_option_item_id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "",
                        "type": "integer"
                    },
                    "price": {
                        "description": "",
                        "type": "string"
                    },
                    "weight": {
                        "description": "",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "",
                        "type": "integer"
                    },
                    "type_price": {
                        "description": "",
                        "type": "string"
                    },
                    "sku": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "ProductAdd": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "model": {
                        "description": "Defines product's model that has to be added",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "price": {
                        "description": "",
                        "type": "number"
                    },
                    "sku": {
                        "description": "",
                        "type": "string"
                    },
                    "special_price": {
                        "description": "Defines product's model that has to be added",
                        "type": "number"
                    },
                    "sprice_create": {
                        "description": "Defines the date of special price creation",
                        "type": "string"
                    },
                    "sprice_modified": {
                        "description": "Defines the date of special price modification",
                        "type": "string"
                    },
                    "sprice_expire": {
                        "description": "Defines the term of special price offer duration",
                        "type": "string"
                    },
                    "tier_prices": {
                        "description": "Defines product's tier prices",
                        "type": "array"
                    },
                    "group_prices": {
                        "description": "Defines product's group prices",
                        "type": "array"
                    },
                    "available_for_view": {
                        "description": "Specifies the set of visible\/invisible products for users",
                        "type": "boolean"
                    },
                    "available_for_sale": {
                        "description": "Specifies the set of visible\/invisible products for sale",
                        "type": "boolean"
                    },
                    "weight": {
                        "description": "",
                        "type": "number"
                    },
                    "weight_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "short_description": {
                        "description": "",
                        "type": "string"
                    },
                    "warehouse_id": {
                        "description": "",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "",
                        "type": "number"
                    },
                    "downloadable": {
                        "description": "Defines whether the product is downloadable",
                        "type": "boolean"
                    },
                    "wholesale_price": {
                        "description": "Defines product's sale price",
                        "type": "number"
                    },
                    "created_at": {
                        "description": "",
                        "type": "string"
                    },
                    "manufacturer": {
                        "description": "Defines product's manufacturer",
                        "type": "string"
                    },
                    "categories_ids": {
                        "description": "Defines product add that is specified by comma-separated categories id",
                        "type": "string"
                    },
                    "tax_class_id": {
                        "description": "Defines tax classes where entity has to be added",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_title": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_keywords": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_description": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "lang_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "stores_ids": {
                        "description": "Assign product to the stores that is specified by comma-separated stores' id",
                        "type": "string"
                    },
                    "viewed_count": {
                        "description": "Specifies the number of product's reviews",
                        "type": "integer"
                    },
                    "ordered_count": {
                        "description": "Defines how many times the product was ordered",
                        "type": "integer"
                    },
                    "attribute_set_name": {
                        "description": "Defines product\u2019s attribute set name in Magento",
                        "type": "string"
                    },
                    "attribute_name": {
                        "description": "Defines product\u2019s attribute name separated with a comma in Magento",
                        "type": "string"
                    },
                    "shipping_template_id": {
                        "description": "The numeric ID of the shipping template associated with the products in Etsy.",
                        "type": "integer"
                    },
                    "condition": {
                        "description": "The human-readable label for the condition (e.g., \"New\").",
                        "type": "string"
                    },
                    "listing_duration": {
                        "description": "Describes the number of days the seller wants the listing to be active. Look at cart.info method response for allowed values.",
                        "type": "string"
                    },
                    "listing_type": {
                        "description": "Indicates the selling format of the eBay listing.",
                        "type": "string"
                    },
                    "payment_methods": {
                        "description": "Identifies the payment method (such as PayPal) that the seller will accept when the buyer pays for the item. Look at cart.info method response for allowed values.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">payment_methods[0] = string<\/br>payment_methods[1] = string<\/br><\/code><\/div><\/div>",
                        "type": "array"
                    },
                    "return_accepted": {
                        "description": "Indicates whether the seller allows the buyer to return the item.",
                        "type": "boolean"
                    },
                    "shipping_details": {
                        "description": "The shipping details, including flat and calculated shipping costs and shipping insurance costs. Look at cart.info method response for allowed values.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">shipping_details[<b>shipping_type<\/b>] = string <\/br>shipping_details[0][<b>shipping_service<\/b>] = string<\/br>shipping_details[0][<b>shipping_cost<\/b>] = decimal<\/br>shipping_details[1][<b>shipping_service<\/b>] = string<\/br>shipping_details[1][<b>shipping_cost<\/b>] = decimal<\/br><\/code><\/div><\/div>",
                        "type": "array"
                    },
                    "paypal_email": {
                        "description": "Valid PayPal email address for the PayPal account that the seller will use if they offer PayPal as a payment method for the listing.",
                        "type": "string"
                    },
                    "package_details": {
                        "description": "If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">package_details[<b>measure_unit<\/b>] = string<\/br> Allowed measure_unit values: [English or Metric] <\/br> Default: Metric<\/br>package_details[<b>weigh_unit<\/b>] = string<\/br> Allowed weigh_unit values: [kg, g, lbs, oz]<\/br>package_details[<b>package_depth<\/b>] = decimal<\/br>package_details[<b>package_length<\/b>] = decimal<\/br>package_details[<b>package_width<\/b>] = decimal<\/br>package_details[<b>weight_major<\/b>] = decimal<\/br>package_details[<b>weight_minor<\/b>] = decimal<\/br>package_details[<b>shipping_package<\/b>] = string<\/br> See cart.info method, param `eBay_shipping_package_details`<\/code><\/div><\/div>",
                        "type": "array"
                    },
                    "best_offer": {
                        "description": "The price at which Best Offers are automatically accepted.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">best_offer[<b>minimum_offer_price<\/b>] = decimal<\/br>best_offer[<b>auto_accept_price<\/b>] = decimal<\/br><\/code><\/div><\/div>",
                        "type": "array"
                    },
                    "sales_tax": {
                        "description": "Percent of an item's price to be charged as the sales tax for the order. Look at cart.info method response for allowed values.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">sales_tax[<b>tax_percent<\/b>] = decimal (##.###)<\/br>sales_tax[<b>tax_state<\/b>] = string<\/br>sales_tax[<b>shipping_inc_in_tax<\/b>] = bool<\/br><\/code><\/div><\/div>",
                        "type": "array"
                    },
                    "upc": {
                        "description": "Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.",
                        "type": "string"
                    },
                    "ean": {
                        "description": "European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.",
                        "type": "string"
                    },
                    "isbn": {
                        "description": "International Standard Book Number. An ISBN is a unique identifier for books.",
                        "type": "string"
                    },
                    "specifics": {
                        "description": "An array of Item Specific Name\/Value pairs used by the seller to provide descriptive details of an item in a structured manner.\n        <hr>\n        <div style=\"font-style:normal\">Param structure:\n          <div style=\"margin-left: 2%;\">\n            <code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">\n              specifics[int][<b>name<\/b>] = string<\/br>\n              specifics[int][<b>value<\/b>] = string<\/br>\n            <\/code>\n          <\/div>\n        <\/div>",
                        "type": "array"
                    },
                    "avail_from": {
                        "description": "Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.",
                        "type": "string"
                    }
                }
            },
            "tier_prices": {
                "type": "array"
            },
            "group_prices": {
                "type": "array"
            },
            "payment_methods": {
                "type": "array"
            },
            "shipping_details": {
                "type": "array"
            },
            "package_details": {
                "type": "array"
            },
            "best_offer": {
                "type": "array"
            },
            "sales_tax": {
                "type": "array"
            },
            "specifics": {
                "type": "array"
            },
            "ProductPriceAdd": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "description": "Defines the product to which the price has to be added",
                        "type": "string"
                    },
                    "group_prices": {
                        "description": "Defines product's group prices",
                        "type": "array"
                    }
                }
            },
            "ProductPriceUpdate": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "description": "Defines the product to which the price has to be added",
                        "type": "string"
                    },
                    "group_prices": {
                        "description": "Defines product's group prices",
                        "type": "array"
                    }
                }
            },
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "parent_id": {
                        "description": "",
                        "type": "string"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "created_at": {
                        "description": "",
                        "type": ""
                    },
                    "modified_at": {
                        "description": "",
                        "type": ""
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "short_description": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "stores_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "keywords": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_description": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_title": {
                        "description": "",
                        "type": "string"
                    },
                    "avail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "path": {
                        "description": "",
                        "type": "string"
                    },
                    "seo_url": {
                        "description": "",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "",
                        "type": "integer"
                    },
                    "images": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Order": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "basket_id": {
                        "description": "",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "create_at": {
                        "description": "",
                        "type": ""
                    },
                    "currency": {
                        "description": "",
                        "type": ""
                    },
                    "Customer_Address": {
                        "description": "",
                        "type": "object"
                    },
                    "shipping_address": {
                        "description": "",
                        "type": ""
                    },
                    "billing_address": {
                        "description": "",
                        "type": ""
                    },
                    "payment_method": {
                        "description": "",
                        "type": ""
                    },
                    "Order_ShippingMethod": {
                        "description": "",
                        "type": "object"
                    },
                    "shipping_method": {
                        "description": "",
                        "type": ""
                    },
                    "shipping_methods": {
                        "description": "",
                        "type": "array"
                    },
                    "status": {
                        "description": "",
                        "type": ""
                    },
                    "totals": {
                        "description": "",
                        "type": ""
                    },
                    "total": {
                        "description": "",
                        "type": ""
                    },
                    "discounts": {
                        "description": "",
                        "type": "array"
                    },
                    "order_products": {
                        "description": "",
                        "type": "array"
                    },
                    "bundles": {
                        "description": "",
                        "type": "array"
                    },
                    "modified_at": {
                        "description": "",
                        "type": ""
                    },
                    "finished_time": {
                        "description": "",
                        "type": ""
                    },
                    "comment": {
                        "description": "",
                        "type": "string"
                    },
                    "store_id": {
                        "description": "",
                        "type": "string"
                    },
                    "warehouses_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "Order_PaymentMethod": {
                        "description": "",
                        "type": "object"
                    },
                    "Order_Status": {
                        "description": "",
                        "type": "object"
                    },
                    "Order_Totals": {
                        "description": "",
                        "type": "object"
                    },
                    "Order_Total": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "payment_method": {
                "type": "object"
            },
            "status": {
                "type": "object"
            },
            "totals": {
                "type": "object"
            },
            "total": {
                "type": "object"
            },
            "discounts": {
                "type": "array"
            },
            "order_products": {
                "type": "array"
            },
            "bundles": {
                "type": "array"
            },
            "warehouses_ids": {
                "type": "array"
            },
            "Order_PaymentMethod": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Order_Status": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "history": {
                        "description": "",
                        "type": "array"
                    },
                    "refund_info": {
                        "description": "",
                        "type": ""
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "Order_Status_Refund": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "history": {
                "type": "array"
            },
            "refund_info": {
                "type": "object"
            },
            "Order_Status_HistoryItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "modified_time": {
                        "description": "",
                        "type": ""
                    },
                    "notify": {
                        "description": "",
                        "type": "boolean"
                    },
                    "comment": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Order_Status_Refund": {
                "type": "object",
                "properties": {
                    "shipping": {
                        "description": "",
                        "type": "number"
                    },
                    "fee": {
                        "description": "",
                        "type": "number"
                    },
                    "tax": {
                        "description": "",
                        "type": "number"
                    },
                    "total_refunded": {
                        "description": "",
                        "type": "number"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "time": {
                        "description": "",
                        "type": ""
                    },
                    "comment": {
                        "description": "",
                        "type": "string"
                    },
                    "refunded_items": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "refunded_items": {
                "type": "array"
            },
            "Order_Status_Refund_Item": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "description": "Defines the product to which the price has to be added",
                        "type": "string"
                    },
                    "variant_id": {
                        "description": "",
                        "type": "string"
                    },
                    "order_product_id": {
                        "description": "",
                        "type": "string"
                    },
                    "qty": {
                        "description": "",
                        "type": "number"
                    },
                    "refund": {
                        "description": "",
                        "type": "number"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Order_Totals": {
                "type": "object",
                "properties": {
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "subtotal": {
                        "description": "",
                        "type": "number"
                    },
                    "shipping": {
                        "description": "",
                        "type": "number"
                    },
                    "tax": {
                        "description": "",
                        "type": "number"
                    },
                    "discount": {
                        "description": "",
                        "type": "number"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Order_Total": {
                "type": "object",
                "properties": {
                    "subtotal_ex_tax": {
                        "description": "",
                        "type": "number"
                    },
                    "wrapping_ex_tax": {
                        "description": "",
                        "type": "number"
                    },
                    "shipping_ex_tax": {
                        "description": "",
                        "type": "number"
                    },
                    "total_discount": {
                        "description": "",
                        "type": "number"
                    },
                    "total_tax": {
                        "description": "",
                        "type": "number"
                    },
                    "total": {
                        "description": "",
                        "type": "number"
                    },
                    "total_paid": {
                        "description": "",
                        "type": "number"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Order_Totals_NewDiscount": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "number"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Order_Item": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "description": "Defines the product to which the price has to be added",
                        "type": "string"
                    },
                    "order_product_id": {
                        "description": "",
                        "type": "string"
                    },
                    "model": {
                        "description": "Defines product's model that has to be added",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "price": {
                        "description": "",
                        "type": "number"
                    },
                    "price_inc_tax": {
                        "description": "",
                        "type": "number"
                    },
                    "quantity": {
                        "description": "",
                        "type": "number"
                    },
                    "discount_amount": {
                        "description": "",
                        "type": "number"
                    },
                    "total_price": {
                        "description": "",
                        "type": "number"
                    },
                    "tax_percent": {
                        "description": "",
                        "type": "number"
                    },
                    "tax_value": {
                        "description": "",
                        "type": "number"
                    },
                    "tax_value_after_discount": {
                        "description": "",
                        "type": "number"
                    },
                    "options": {
                        "description": "",
                        "type": "array"
                    },
                    "variant_id": {
                        "description": "",
                        "type": "string"
                    },
                    "weight_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "weight": {
                        "description": "",
                        "type": "number"
                    },
                    "parent_order_product_id": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "options": {
                "type": "array"
            },
            "Order_Item_Option": {
                "type": "object",
                "properties": {
                    "option_id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "price": {
                        "description": "",
                        "type": "number"
                    },
                    "weight": {
                        "description": "",
                        "type": "number"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "product_option_value_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "OrderAdd": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "store_id": {
                        "description": "",
                        "type": "string"
                    },
                    "order_status": {
                        "description": "Defines order status.",
                        "type": "string"
                    },
                    "send_notifications": {
                        "description": "Send notifications to customer after order was created",
                        "type": "boolean"
                    },
                    "customer_email": {
                        "description": "Defines the customer specified by email for whom order has to be created",
                        "type": "string"
                    },
                    "bill_first_name": {
                        "description": "Specifies billing first name",
                        "type": "string"
                    },
                    "bill_last_name": {
                        "description": "Specifies billing last name",
                        "type": "string"
                    },
                    "bill_address_1": {
                        "description": "Specifies first billing address",
                        "type": "string"
                    },
                    "bill_city": {
                        "description": "Specifies billing city",
                        "type": "string"
                    },
                    "bill_postcode": {
                        "description": "Specifies billing postcode",
                        "type": "string"
                    },
                    "bill_state": {
                        "description": "Specifies billing state code",
                        "type": "string"
                    },
                    "bill_country": {
                        "description": "Specifies billing country code",
                        "type": "string"
                    },
                    "shipp_first_name": {
                        "description": "Specifies shipping first name",
                        "type": "string"
                    },
                    "shipp_last_name": {
                        "description": "Specifies shipping last name",
                        "type": "string"
                    },
                    "shipp_address_1": {
                        "description": "Specifies first shipping address",
                        "type": "string"
                    },
                    "shipp_city": {
                        "description": "Specifies shipping city",
                        "type": "string"
                    },
                    "shipp_postcode": {
                        "description": "Specifies shipping postcode",
                        "type": "string"
                    },
                    "shipp_state": {
                        "description": "Specifies shipping state code",
                        "type": "string"
                    },
                    "shipp_country": {
                        "description": "Specifies shipping country code",
                        "type": "string"
                    },
                    "total_price": {
                        "description": "",
                        "type": "number"
                    },
                    "date": {
                        "description": "Specifies an order creation date in format Y-m-d H:i:s",
                        "type": "string"
                    },
                    "order_payment_method": {
                        "description": "Defines order payment method",
                        "type": "string"
                    },
                    "order_shipping_method": {
                        "description": "Defines order shipping method",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Currency code of order",
                        "type": "string"
                    },
                    "bill_address_2": {
                        "description": "Specifies second billing address",
                        "type": "string"
                    },
                    "bill_company": {
                        "description": "Specifies billing company",
                        "type": "string"
                    },
                    "bill_phone": {
                        "description": "Specifies billing phone",
                        "type": "string"
                    },
                    "bill_fax": {
                        "description": "Specifies billing fax",
                        "type": "string"
                    },
                    "comment": {
                        "description": "",
                        "type": "string"
                    },
                    "admin_comment": {
                        "description": "Specifies admin's order comment",
                        "type": "string"
                    },
                    "customer_first_name": {
                        "description": "Specifies customer's first name",
                        "type": "string"
                    },
                    "customer_last_name": {
                        "description": "Specifies customer\u2019s last name",
                        "type": "string"
                    },
                    "customer_birthday": {
                        "description": "Specifies customer\u2019s birthday",
                        "type": "string"
                    },
                    "customer_fax": {
                        "description": "Specifies customer\u2019s fax",
                        "type": "string"
                    },
                    "customer_phone": {
                        "description": "Specifies customer\u2019s phone",
                        "type": "string"
                    },
                    "shipp_address_2": {
                        "description": "Specifies second address line of a shipping street address",
                        "type": "string"
                    },
                    "shipp_company": {
                        "description": "Specifies shipping company",
                        "type": "string"
                    },
                    "shipp_phone": {
                        "description": "Specifies shipping phone",
                        "type": "string"
                    },
                    "shipp_fax": {
                        "description": "Specifies shipping fax",
                        "type": "string"
                    },
                    "date_modified": {
                        "description": "Specifies order's  modification date",
                        "type": "string"
                    },
                    "date_finished": {
                        "description": "Specifies order's  finished date",
                        "type": "string"
                    },
                    "subtotal_price": {
                        "description": "Total price of all ordered products multiplied by their number, excluding tax, shipping price and discounts",
                        "type": "number"
                    },
                    "tax_price": {
                        "description": "The value of tax cost for order",
                        "type": "number"
                    },
                    "shipping_price": {
                        "description": "Specifies order's shipping price",
                        "type": "number"
                    },
                    "discount": {
                        "description": "",
                        "type": "number"
                    },
                    "coupon_discount": {
                        "description": "Specifies order's coupon discount",
                        "type": "number"
                    },
                    "gift_certificate_discount": {
                        "description": "Discounts for order with gift certificates",
                        "type": "number"
                    },
                    "fulfillment_status": {
                        "description": "Create order with fulfillment status",
                        "type": "string"
                    },
                    "financial_status": {
                        "description": "Create order with financial status",
                        "type": "string"
                    },
                    "total_paid": {
                        "description": "",
                        "type": "number"
                    },
                    "external_source": {
                        "description": "Identifying the system used to generate the order",
                        "type": "string"
                    },
                    "tags": {
                        "description": "Order tags",
                        "type": "string"
                    },
                    "inventory_behaviour": {
                        "description": "The behaviour to use when updating inventory.<hr><div style=\"font-style:normal\">Values description:<div style=\"margin-left: 2%; padding-top: 2%\"><div style=\"font-size:85%\"><b>bypass<\/b> = Do not claim inventory <\/br><\/br><b>decrement_ignoring_policy<\/b> = Ignore the product's <\/br> inventory policy and claim amounts<\/br><\/br><b>decrement_obeying_policy<\/b> =  Obey the product's <\/br> inventory policy.<\/br><\/br><\/div><\/div><\/div>",
                        "type": "string"
                    },
                    "create_invoice": {
                        "description": "Defines whether the invoice is created automatically along with the order",
                        "type": "boolean"
                    },
                    "order_item": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "order_item": {
                "type": "array"
            },
            "OrderAbandoned": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "basket_id": {
                        "description": "",
                        "type": "string"
                    },
                    "basket_url": {
                        "description": "",
                        "type": "string"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "created_at": {
                        "description": "",
                        "type": ""
                    },
                    "modified_at": {
                        "description": "",
                        "type": ""
                    },
                    "currency": {
                        "description": "",
                        "type": ""
                    },
                    "Order_Totals": {
                        "description": "",
                        "type": "object"
                    },
                    "totals": {
                        "description": "",
                        "type": ""
                    },
                    "order_products": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Shipment": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "warehouse_id": {
                        "description": "",
                        "type": "string"
                    },
                    "shipment_provider": {
                        "description": "",
                        "type": "string"
                    },
                    "tracking_numbers": {
                        "description": "",
                        "type": "array"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "created_at": {
                        "description": "",
                        "type": ""
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "tracking_numbers": {
                "type": "array"
            },
            "items": {
                "type": "array"
            },
            "Shipment_TrackingNumber": {
                "type": "object",
                "properties": {
                    "carrier_id": {
                        "description": "",
                        "type": "string"
                    },
                    "tracking_number": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "OrderShipmentAdd": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "warehouse_id": {
                        "description": "",
                        "type": "string"
                    },
                    "shipment_provider": {
                        "description": "",
                        "type": "string"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    },
                    "send_notifications": {
                        "description": "Send notifications to customer after order was created",
                        "type": "boolean"
                    },
                    "tracking_numbers": {
                        "description": "",
                        "type": "array"
                    },
                    "adjust_stock": {
                        "description": "This parameter is used for adjust stock.",
                        "type": "boolean"
                    }
                }
            },
            "OrderShipmentUpdate": {
                "type": "object",
                "properties": {
                    "shipment_id": {
                        "description": "Shipment id indicates the number of delivery",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "tracking_numbers": {
                        "description": "",
                        "type": "array"
                    },
                    "replace": {
                        "description": "Allows rewrite tracking numbers",
                        "type": "boolean"
                    }
                }
            },
            "OrderShipmentTrackingAdd": {
                "type": "object",
                "properties": {
                    "store_id": {
                        "description": "",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "shipment_id": {
                        "description": "Shipment id indicates the number of delivery",
                        "type": "string"
                    },
                    "carrier_id": {
                        "description": "",
                        "type": "string"
                    },
                    "tracking_provider": {
                        "description": "Defines name of the company which provides shipment tracking",
                        "type": "string"
                    },
                    "tracking_number": {
                        "description": "",
                        "type": "string"
                    },
                    "tracking_link": {
                        "description": "Defines custom tracking link",
                        "type": "string"
                    }
                }
            },
            "OrderRefundAdd": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "items": {
                        "description": "",
                        "type": "array"
                    },
                    "total_price": {
                        "description": "",
                        "type": "number"
                    },
                    "shipping_price": {
                        "description": "Specifies order's shipping price",
                        "type": "number"
                    },
                    "fee_price": {
                        "description": "Specifies refund's fee price",
                        "type": "number"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    },
                    "item_restock": {
                        "description": "Boolean, whether or not to add the line items back to the store inventory.",
                        "type": "boolean"
                    },
                    "send_notifications": {
                        "description": "Send notifications to customer after order was created",
                        "type": "boolean"
                    },
                    "date": {
                        "description": "Specifies an order creation date in format Y-m-d H:i:s",
                        "type": "string"
                    },
                    "is_online": {
                        "description": "Indicates whether refund type is online",
                        "type": "boolean"
                    }
                }
            },
            "Basket_LiveShippingService": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "callback": {
                        "description": "",
                        "type": "string"
                    },
                    "callback_err_cnt": {
                        "description": "",
                        "type": "integer"
                    },
                    "enabled_on_store": {
                        "description": "",
                        "type": "boolean"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Basket": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "basket_url": {
                        "description": "",
                        "type": "string"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "created_at": {
                        "description": "",
                        "type": ""
                    },
                    "modified_at": {
                        "description": "",
                        "type": ""
                    },
                    "currency": {
                        "description": "",
                        "type": ""
                    },
                    "basket_products": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "BaseCustomer": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "customer": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "",
                        "type": "string"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "created_time": {
                        "description": "",
                        "type": ""
                    },
                    "modified_time": {
                        "description": "",
                        "type": ""
                    },
                    "group": {
                        "description": "",
                        "type": "array"
                    },
                    "login": {
                        "description": "",
                        "type": "string"
                    },
                    "last_login": {
                        "description": "",
                        "type": ""
                    },
                    "birth_day": {
                        "description": "",
                        "type": ""
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "news_letter_subscription": {
                        "description": "",
                        "type": "boolean"
                    },
                    "gender": {
                        "description": "",
                        "type": "string"
                    },
                    "stores_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "website": {
                        "description": "",
                        "type": "string"
                    },
                    "fax": {
                        "description": "",
                        "type": "string"
                    },
                    "company": {
                        "description": "",
                        "type": "string"
                    },
                    "phone": {
                        "description": "",
                        "type": "string"
                    },
                    "ip_address": {
                        "description": "",
                        "type": "string"
                    },
                    "address_book": {
                        "description": "",
                        "type": "array"
                    },
                    "orders_count": {
                        "description": "",
                        "type": "integer"
                    },
                    "last_order_id": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "basket_products": {
                "type": "array"
            },
            "BaseCustomer": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Basket_Item": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "parent_id": {
                        "description": "",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "Defines the product to which the price has to be added",
                        "type": "string"
                    },
                    "variant_id": {
                        "description": "",
                        "type": "string"
                    },
                    "sku": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "price": {
                        "description": "",
                        "type": "number"
                    },
                    "tax": {
                        "description": "",
                        "type": "number"
                    },
                    "quantity": {
                        "description": "",
                        "type": "number"
                    },
                    "weight_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "weight": {
                        "description": "",
                        "type": "number"
                    },
                    "options": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Basket_Item_Option": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "value_id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "used_in_combination": {
                        "description": "",
                        "type": "boolean"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "group": {
                "type": "array"
            },
            "address_book": {
                "type": "array"
            },
            "Customer_Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "CustomerAdd": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "",
                        "type": "string"
                    },
                    "password": {
                        "description": "Defines customer's unique password",
                        "type": "string"
                    },
                    "group": {
                        "description": "Defines the group where the customer",
                        "type": "string"
                    },
                    "created_time": {
                        "description": "Entity's date creation",
                        "type": "string"
                    },
                    "modified_time": {
                        "description": "Entity's date modification",
                        "type": "string"
                    },
                    "login": {
                        "description": "",
                        "type": "string"
                    },
                    "last_login": {
                        "description": "Defines customer's last login time",
                        "type": "string"
                    },
                    "birth_day": {
                        "description": "Defines customer's birthday",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "news_letter_subscription": {
                        "description": "",
                        "type": "boolean"
                    },
                    "gender": {
                        "description": "",
                        "type": "string"
                    },
                    "website": {
                        "description": "",
                        "type": "string"
                    },
                    "fax": {
                        "description": "",
                        "type": "string"
                    },
                    "company": {
                        "description": "",
                        "type": "string"
                    },
                    "phone": {
                        "description": "",
                        "type": "string"
                    },
                    "address": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "StoreAttribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "default_values": {
                        "description": "",
                        "type": "array"
                    },
                    "position": {
                        "description": "",
                        "type": "integer"
                    },
                    "visible": {
                        "description": "",
                        "type": "boolean"
                    },
                    "required": {
                        "description": "",
                        "type": "boolean"
                    },
                    "system": {
                        "description": "",
                        "type": "boolean"
                    },
                    "values": {
                        "description": "",
                        "type": "array"
                    },
                    "store_id": {
                        "description": "",
                        "type": "string"
                    },
                    "lang_id": {
                        "description": "Language id",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "default_values": {
                "type": "array"
            },
            "values": {
                "type": "array"
            },
            "StoreAttribute_Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "position": {
                        "description": "",
                        "type": "integer"
                    },
                    "attribute_set_id": {
                        "description": "",
                        "type": "string"
                    },
                    "assigned_attribute_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "assigned_attribute_ids": {
                "type": "array"
            },
            "Product_Attribute": {
                "type": "object",
                "properties": {
                    "attribute_id": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "lang_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "required": {
                        "description": "",
                        "type": "boolean"
                    },
                    "visible": {
                        "description": "",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "position": {
                        "description": "",
                        "type": "integer"
                    },
                    "attribute_group_id": {
                        "description": "",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Product_Review": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "Defines the product to which the price has to be added",
                        "type": "string"
                    },
                    "customer_id": {
                        "description": "",
                        "type": "string"
                    },
                    "nick_name": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "summary": {
                        "description": "",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    },
                    "rating": {
                        "description": "",
                        "type": "integer"
                    },
                    "ratings": {
                        "description": "",
                        "type": "array"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "DateTime": {
                        "description": "",
                        "type": "object"
                    },
                    "created_time": {
                        "description": "",
                        "type": ""
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "ratings": {
                "type": "array"
            },
            "Product_Review_Rating": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "integer"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "Child": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "parent_id": {
                        "description": "",
                        "type": "string"
                    },
                    "sku": {
                        "description": "",
                        "type": "string"
                    },
                    "upc": {
                        "description": "Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.",
                        "type": "string"
                    },
                    "ean": {
                        "description": "European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.",
                        "type": "string"
                    },
                    "mpn": {
                        "description": "",
                        "type": "string"
                    },
                    "gtin": {
                        "description": "",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "",
                        "type": "integer"
                    },
                    "created_time": {
                        "description": "Entity's date creation",
                        "type": "string"
                    },
                    "modified_time": {
                        "description": "Entity's date modification",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "short_description": {
                        "description": "",
                        "type": "string"
                    },
                    "full_description": {
                        "description": "",
                        "type": "string"
                    },
                    "images": {
                        "description": "",
                        "type": "array"
                    },
                    "combination": {
                        "description": "",
                        "type": "array"
                    },
                    "default_price": {
                        "description": "",
                        "type": "number"
                    },
                    "list_price": {
                        "description": "",
                        "type": "number"
                    },
                    "wholesale_price": {
                        "description": "Defines product's sale price",
                        "type": "number"
                    },
                    "advanced_price": {
                        "description": "",
                        "type": "array"
                    },
                    "tax_class_id": {
                        "description": "",
                        "type": "string"
                    },
                    "avail_for_sale": {
                        "description": "",
                        "type": "boolean"
                    },
                    "allow_backorders": {
                        "description": "",
                        "type": "boolean"
                    },
                    "in_stock": {
                        "description": "",
                        "type": "boolean"
                    },
                    "manage_stock": {
                        "description": "",
                        "type": "boolean"
                    },
                    "inventory_level": {
                        "description": "",
                        "type": "number"
                    },
                    "inventory": {
                        "description": "",
                        "type": "array"
                    },
                    "min_quantity": {
                        "description": "",
                        "type": "number"
                    },
                    "default_qty_in_pack": {
                        "description": "",
                        "type": "number"
                    },
                    "is_qty_in_pack_fixed": {
                        "description": "",
                        "type": "boolean"
                    },
                    "weight_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "weight": {
                        "description": "",
                        "type": "number"
                    },
                    "dimensions_unit": {
                        "description": "",
                        "type": "string"
                    },
                    "width": {
                        "description": "",
                        "type": "number"
                    },
                    "height": {
                        "description": "",
                        "type": "number"
                    },
                    "length": {
                        "description": "",
                        "type": "number"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "combination": {
                "type": "array"
            },
            "ProductVariantPriceAdd": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "group_prices": {
                        "description": "Defines product's group prices",
                        "type": "array"
                    }
                }
            },
            "ProductVariantPriceUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "group_prices": {
                        "description": "Defines product's group prices",
                        "type": "array"
                    }
                }
            },
            "ProductTaxAdd": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "description": "Defines the product to which the price has to be added",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "tax_rates": {
                        "description": "Defines tax rates of specified tax classes",
                        "type": "array"
                    }
                }
            },
            "tax_rates": {
                "type": "array"
            },
            "Brand": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "created_time": {
                        "description": "Entity's date creation",
                        "type": "string"
                    },
                    "modified_time": {
                        "description": "Entity's date modification",
                        "type": "string"
                    },
                    "full_description": {
                        "description": "",
                        "type": "string"
                    },
                    "short_description": {
                        "description": "",
                        "type": "string"
                    },
                    "stores_ids": {
                        "description": "",
                        "type": "array"
                    },
                    "active": {
                        "description": "",
                        "type": "boolean"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_title": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_keywords": {
                        "description": "",
                        "type": "string"
                    },
                    "meta_description": {
                        "description": "",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "TaxClass": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "avail": {
                        "description": "",
                        "type": "boolean"
                    },
                    "tax": {
                        "description": "",
                        "type": "number"
                    },
                    "tax_type": {
                        "description": "",
                        "type": "integer"
                    },
                    "tax_rates": {
                        "description": "Defines tax rates of specified tax classes",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "TaxClass_Rate": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "tax": {
                        "description": "",
                        "type": "number"
                    },
                    "tax_type": {
                        "description": "",
                        "type": "integer"
                    },
                    "tax_based_on": {
                        "description": "",
                        "type": "string"
                    },
                    "countries": {
                        "description": "",
                        "type": "array"
                    },
                    "cities": {
                        "description": "",
                        "type": "array"
                    },
                    "address": {
                        "description": "",
                        "type": "array"
                    },
                    "zip_codes": {
                        "description": "",
                        "type": "array"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "countries": {
                "type": "array"
            },
            "cities": {
                "type": "array"
            },
            "zip_codes": {
                "type": "array"
            },
            "Subscriber": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "customer_id": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "subscribed": {
                        "description": "",
                        "type": "boolean"
                    },
                    "first_name": {
                        "description": "",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "",
                        "type": "string"
                    },
                    "created_time": {
                        "description": "Entity's date creation",
                        "type": "string"
                    },
                    "modified_time": {
                        "description": "Entity's date modification",
                        "type": "string"
                    },
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "attributes": {
                "type": "array"
            },
            "Tax_Rate": {
                "type": "object",
                "properties": {
                    "additional_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "created_at": {
                        "description": "",
                        "type": "string"
                    },
                    "custom_fields": {
                        "description": "",
                        "type": "object"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "modified_at": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "integer"
                    },
                    "value": {
                        "description": "",
                        "type": "number"
                    }
                }
            }
        }
    }
}