{
    "id": "b3d8e30b584abdccfcef88fb4aafc2b2",
    "name": "Swagger API2Cart",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "013dd4b8800381d22de1d13bed3379fa",
            "name": "Post Webhook Create",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.create.json",
            "description": "Create webhook on the store and subscribe to it.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fields",
                    "description": "Fields the webhook should send",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "7692c0264a4262a5aaac18de411e3340",
            "name": "Get Webhook List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.list.json",
            "description": "List registered webhook on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "026083d31857a2730a5be3858c32f463",
            "name": "Get Webhook Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.count.json",
            "description": "Count registered webhooks on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "7b80741dd9cb5d1722da169496b0149b",
            "name": "Get Webhook Events",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.events.json",
            "description": "List all Webhooks that are available on this store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "689e00ad0cbab71a16faa72167d61f7d",
            "name": "Delete Webhook Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.delete.json",
            "description": "Delete registered webhook on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "74c95c10dbd9639fd53faf5c26f8bffc",
            "name": "Put Webhook Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.update.json",
            "description": "Update Webhooks parameters.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fields",
                    "description": "Fields the webhook should send",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "c596e3eed140470a1f4c140778a22d36",
            "name": "Post Cart Create",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.create.json",
            "description": "Add store to the account",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cart_id",
                    "description": "Store\u2019s identifier which you can get from cart_list method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "verify",
                    "description": "Enables or disables cart's verification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_host",
                    "description": "FTP connection host",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_user",
                    "description": "FTP User",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_password",
                    "description": "FTP Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_port",
                    "description": "FTP Port",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_store_dir",
                    "description": "FTP Store dir",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_3dcart",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdminAccount",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiPath",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiKey",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessToken",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_shopify",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiPassword",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessToken_shopify",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiUsername",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EncryptedPassword",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiUser_adnsf",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiPass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessKey_scelite",
                    "description": "Shopping Cart Elite Access Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_scelite",
                    "description": "Shopping Cart Elite API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiSecretKey_scelite",
                    "description": "Shopping Cart Elite API Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "privateKey",
                    "description": "3DCart Application Private Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "appToken",
                    "description": "3DCart Token from Application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tokenSecret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "dw_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "dw_api_pass",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "environment",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_id",
                    "description": "Omni Commerce Connector Client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_secret",
                    "description": "Omni Commerce Connector Client Secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "2d8858bee051c5ab4be0abeee4965621",
            "name": "Get Cart Validate",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.validate.json",
            "description": "Check store availability, bridge connection for the downloadable carts, identify DB prefix, validate API accesses for API carts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "4b7f997b25d58ea282a969572c8b4e0b",
            "name": "Get Cart List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.list.json",
            "description": "Get list of supported carts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "4cee1b1920e8ca356ce83e5357f23170",
            "name": "Get Cart Bridge",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.bridge.json",
            "description": "Get bridge key and store key",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "31f78d4879f7961972bdab382f3e5f7d",
            "name": "Delete Cart Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.delete.json",
            "description": "Remove store from API2Cart",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "3155fec1fef6ad60d6d0394806310a88",
            "name": "Get Cart Disconnect",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.disconnect.json",
            "description": "Disconnect with the store and clear store session data.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "delete_bridge",
                    "description": "Identifies if there is a necessity to delete bridge",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "d730b66824abf25ead40ffb1f17c4ccc",
            "name": "Get Cart Methods",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.methods.json",
            "description": "Get list of cart methods",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "14e72298d99a166e397ec4ea69189dbe",
            "name": "Get Cart Config",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.config.json",
            "description": "Get list of cart configs",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "e8d03273801a68adab97d01d36f3aa57",
            "name": "Put Cart Config Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.config.update.json",
            "description": "Use this API method to update custom data in client database.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "01ac43dc194eb992f81037a1fe6a691f",
            "name": "Get Cart Coupon Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.count.json",
            "description": "Get cart coupons count.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_from",
                    "description": "Filter entity by date_start (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_to",
                    "description": "Filter entity by date_start (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_from",
                    "description": "Filter entity by date_end (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_to",
                    "description": "Filter entity by date_end (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "27a90d04615c829469ffc3783f37283c",
            "name": "Get Cart Coupon List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.list.json",
            "description": "Get cart coupon discounts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "coupons_ids",
                    "description": "Filter coupons by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_from",
                    "description": "Filter entity by date_start (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_to",
                    "description": "Filter entity by date_start (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_from",
                    "description": "Filter entity by date_end (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_to",
                    "description": "Filter entity by date_end (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "10974d76c8aadd18660304e351a0497c",
            "name": "Get Cart Giftcard Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.count.json",
            "description": "Get gift cards count.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "f65c2193fc16cf48713015aabc04af52",
            "name": "Get Cart Giftcard List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.list.json",
            "description": "Get gift cards list.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "2982a8a74daec9b28a551a952d2b92e4",
            "name": "Post Cart Giftcard Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.add.json",
            "description": "Create new gift card",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "amount",
                    "description": "Defines the gift card amount value.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Gift card code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "owner_email",
                    "description": "Gift card owner email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "8bb63c1f529e8e8186a1daf3648d0b3f",
            "name": "Post Cart Coupon Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.add.json",
            "description": "Create new coupon",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Gift card code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "codes",
                    "description": "Entity codes",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_type",
                    "description": "Coupon discount type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_apply_to",
                    "description": "Defines where discount should be applied",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_scope",
                    "description": "Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_amount",
                    "description": "Defines the discount amount value.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start",
                    "description": "Defines when discount code will be available.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end",
                    "description": "Defines when discount code will be expired.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "usage_limit",
                    "description": "Usage limit for coupon.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "usage_limit_per_customer",
                    "description": "Usage limit per customer.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_entity",
                    "description": "Defines entity for action condition.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_key",
                    "description": "Defines entity attribute code for action condition.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_operator",
                    "description": "Defines condition operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_value",
                    "description": "Defines condition attribute value\/s. Can be comma separated string.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "6427b7cbe08d3223a33ce69ef2791a87",
            "name": "Post Cart Coupon Condition Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.condition.add.json",
            "description": "Create new coupon condition",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "coupon_id",
                    "description": "Coupon Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "target",
                    "description": "Defines condition operator",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "key",
                    "description": "Defines condition entity attribute key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "operator",
                    "description": "Defines condition operator",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value",
                    "description": "Defines condition value, can be comma separated according to the operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "21a003a060a98e7b2849a324a98f3333",
            "name": "Delete Cart Coupon Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.delete.json",
            "description": "Delete coupon",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "4b490b73f2bc591727a310ccd08eed84",
            "name": "Get Cart Script List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.list.json",
            "description": "Get scripts installed to the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "script_ids",
                    "description": "Retrieves only scripts with specific ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "6aa71399b1a5c34b7476d856fb81f0ec",
            "name": "Post Cart Script Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.add.json",
            "description": "Add new script to the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "html",
                    "description": "An html string containing exactly one `script` tag.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "src",
                    "description": "The URL of the remote script",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "load_method",
                    "description": "The load method to use for the script",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "scope",
                    "description": "The page or pages on the online store where the script should be included",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "65e6eda1e9c49e977195d82e367f588c",
            "name": "Delete Cart Script Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.delete.json",
            "description": "Remove script from the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "7c0f278ed4542fecdba107e2cd899400",
            "name": "Get Cart Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.info.json",
            "description": "Get cart information",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "00fd20e28ecc5e9052fd65bd6dd1cb4c",
            "name": "Post Cart Clear Cache",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.clear_cache.json",
            "description": "Clear cache on store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cache_type",
                    "description": "Defines which cache should be cleared.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "09c6ad0c3c4a03d7e3c4c88f5eac5e10",
            "name": "Get Cart Plugin List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.plugin.list.json",
            "description": "Get list of installed plugins",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "73f30f080d1a3374d967e80b4e5e1698",
            "name": "Get Cart Shipping Zones List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.shipping_zones.list.json",
            "description": "Get list of shipping zones",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "3ceea0b859368bc74f18a4b77738504c",
            "name": "Get Account Cart List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.cart.list.json",
            "description": "Get list of carts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "request_from_date",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "request_to_date",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "a2c620e565dacf6a5cf5ba6979cc2dc3",
            "name": "Post Account Cart Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.cart.add.json",
            "description": "Add store to the account",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cart_id",
                    "description": "Store\u2019s identifier which you can get from cart_list method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "verify",
                    "description": "Enables or disables cart's verification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_host",
                    "description": "FTP connection host",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_user",
                    "description": "FTP User",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_password",
                    "description": "FTP Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_port",
                    "description": "FTP Port",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_store_dir",
                    "description": "FTP Store dir",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "3dcartapi_api_key",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_user",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_pass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_admin_account",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_path",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_key",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_api_password",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_env_type",
                    "description": "Demandware environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_acess_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_store_id",
                    "description": "Store Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_token_secret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_key",
                    "description": "Neto API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_username",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_key",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_password",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_password",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_id",
                    "description": "Omni Commerce Connector Client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_secret",
                    "description": "Omni Commerce Connector Client Secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "d9b8791908c18e9324de281886e19467",
            "name": "Put Account Config Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.config.update.json",
            "description": "Update configs in the API2Cart database.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "new_store_key",
                    "description": "Update store key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "3dcartapi_api_key",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_user",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_pass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_admin_account",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_path",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_key",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_api_password",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_env_type",
                    "description": "Demandware environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_acess_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_store_id",
                    "description": "Store Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_token_secret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_key",
                    "description": "Neto API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_username",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_key",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_password",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_password",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "214ec25add4c0d603df6e1cbe6276e3a",
            "name": "Get Account Failed Webhooks",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.failed_webhooks.json",
            "description": "List webhooks that was not delivered to the callback.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "ee0aa76cdc9bc8684d99a85de069a05e",
            "name": "Get Account Supported Platforms",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.supported_platforms.json",
            "description": "Get list of supported platforms",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "8e9cc48a83dea079b4a14777fcab6f08",
            "name": "Get Bridge Download File",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.download.file",
            "description": "Download bridge for store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "whitelabel",
                    "description": "Identifies if there is a necessity to download whitelabel bridge.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "e97fc693c2ebd7cf9c526d4653af9b71",
            "name": "Post Bridge Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.update.json",
            "description": "Update bridge in the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "5f7fcb908379df07bc4899e4e1f9fc61",
            "name": "Post Bridge Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.delete.json",
            "description": "Delete bridge from the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "7058e99e4b0dab9dd90d46d0f20508db",
            "name": "Get Product List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.list.json",
            "description": "Get list of products from your store. Returns 10 products by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_view",
                    "description": "Specifies the set of visible\/invisible products",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_params",
                    "description": "Set this parameter in order to choose which product variants fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "since_id",
                    "description": "Retrieve products starting from the specified product id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_cache",
                    "description": "Disable cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "b34edf81b4b583d52e7da0e49d870a3b",
            "name": "Get Product Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.count.json",
            "description": "Count products in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_view",
                    "description": "Specifies the set of visible\/invisible products",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "b79f6ef51ec93c26ebcf97f4d9d0f7de",
            "name": "Get Product Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.info.json",
            "description": "Get product info about product ID *** or specify other product ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_params",
                    "description": "Set this parameter in order to choose which product variants fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "74893b0315831bbf030d66c44af2bcd9",
            "name": "Get Product Find",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.find.json",
            "description": "Search product in store catalog. \"Apple\" is specified here by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_what",
                    "description": "Parameter's value specifies the entity that has to be found",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "55be9fc1d6246b6cff0e0ff78244f2c9",
            "name": "Get Product Fields",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.fields.json",
            "description": "Retrieve all available fields for product item in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "db483fae2d1cd51dcc1eb581a33a7d3f",
            "name": "Post Product Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.add.json",
            "description": "Add new product to store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "197b6dd7574d2ff5006f7cabd1ebc39c",
            "name": "Put Product Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.update.json",
            "description": "Update price and quantity for a specific product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "model",
                    "description": "Defines product model that has to be updated",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "cost_price",
                    "description": "Defines new product's cost price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "retail_price",
                    "description": "Defines new product's retail price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "increase_quantity",
                    "description": "Defines the incremental changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reduce_quantity",
                    "description": "Defines the decrement changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reserve_quantity",
                    "description": "This parameter allows to reserve\/unreserve product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manage_stock",
                    "description": "Defines inventory tracking for product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer_id",
                    "description": "Defines product's manufacturer by manufacturer_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "in_stock",
                    "description": "Set stock status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "26520a0a844b69ace2159ecd38230e6d",
            "name": "Delete Product Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.delete.json",
            "description": "Product delete",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "4ec3a09d49e6865545ab3c3c837c9486",
            "name": "Post Product Price Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.add.json",
            "description": "Add some prices to the product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "f874aa500c2ad2ba354e0b38419cf496",
            "name": "Put Product Price Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.update.json",
            "description": "Update some prices of the product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "09d5276aa937448350885559ee94515f",
            "name": "Delete Product Price Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.delete.json",
            "description": "Delete some prices of the product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_prices",
                    "description": "Defines product's group prices",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "2980b36ce5e596869605455c7edf3547",
            "name": "Post Product Image Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.add.json",
            "description": "Add image to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "mime",
                    "description": "Mime type of image http:\/\/en.wikipedia.org\/wiki\/Internet_media_type.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "content",
                    "description": "Content(body) encoded in base64 of image file",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_id",
                    "description": "Defines product's variants specified by variant id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "variant_ids",
                    "description": "Defines product's variants ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "78bc897dca2576a2a75520d555c89139",
            "name": "Put Product Image Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.update.json",
            "description": "Update details of image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hidden",
                    "description": "Define is hide image",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "301b11f386a5c032beeee5a039b718d5",
            "name": "Delete Product Image Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.delete.json",
            "description": "Delete image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "30e9f802567b9a26320aa3d8fc11ad3a",
            "name": "Get Category List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.list.json",
            "description": "Get list of categories from store. Returns 4 categories by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "cc8922e9a8d8dead7c5affbdeee6c4c3",
            "name": "Get Category Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.count.json",
            "description": "Count categories in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "12abfc6b846c2a726447e7efc5523e70",
            "name": "Get Category Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.info.json",
            "description": "Get category info about category ID*** or specify other category ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "779eebf7904736b98a4e501ae6677a42",
            "name": "Get Category Find",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.find.json",
            "description": "Search category in store. \"Laptop\" is specified here by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "4801cb5d08360f89c28ffebb276b4b43",
            "name": "Post Category Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.add.json",
            "description": "Add new category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "stores_ids",
                    "description": "Create category in the stores that is specified by comma-separated stores' id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_time",
                    "description": "Entity's date creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_time",
                    "description": "Entity's date modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "8cb48c57bce47a83362f619ee2db8df8",
            "name": "Put Category Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.update.json",
            "description": "Update category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "stores_ids",
                    "description": "Create category in the stores that is specified by comma-separated stores' id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_time",
                    "description": "Entity's date modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "21eddc6f32768b8277869732e18496a0",
            "name": "Delete Category Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.delete.json",
            "description": "Delete category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "67a0548c79e9f753b7bd8c82d536cd9f",
            "name": "Post Category Assign",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.assign.json",
            "description": "Assign category to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "b29ae6cdcbb42640fc05b5164e0d30d0",
            "name": "Post Category Unassign",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.unassign.json",
            "description": "Unassign category to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "15dfcfca67b3db41dcacfddfd648ee61",
            "name": "Post Category Image Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.image.add.json",
            "description": "Add image to category",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "mime",
                    "description": "Mime type of image http:\/\/en.wikipedia.org\/wiki\/Internet_media_type.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "f4364e2656ba5012d8ac9838ddc93a7e",
            "name": "Delete Category Image Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.image.delete.json",
            "description": "Delete image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_id",
                    "description": "Define image id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "b15ecaa2ad7c3ed79b7bf339aafbc900",
            "name": "Get Order Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.count.json",
            "description": "Count orders in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_ids",
                    "description": "Counts orders specified by order ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fulfillment_status",
                    "description": "Create order with fulfillment status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shipping_method",
                    "description": "Retrieve entities according to shipping method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "2f6846e5ff5cb0f1ef95d5c542d490c8",
            "name": "Get Order List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.list.json",
            "description": "Get list of orders from store. Returns 4 orders by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_ids",
                    "description": "Counts orders specified by order ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "basket_id",
                    "description": "Retrieves order\u2019s info specified by basket id.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fulfillment_status",
                    "description": "Create order with fulfillment status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shipping_method",
                    "description": "Retrieve entities according to shipping method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "skip_order_ids",
                    "description": "Skipped orders by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "0873be2f75ce5cb3136b2a962fabea3f",
            "name": "Get Order Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.info.json",
            "description": "Info about a specific order by ID",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "9263e64ebcac3a0f7d430aaffa3dbda4",
            "name": "Get Order Find",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.find.json",
            "description": "Find orders",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "d723ea287bbc5725d42e70422c307cb2",
            "name": "Post Order Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.add.json",
            "description": "Add a new order to the cart.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "bf11d6442cba6b9bcd5917bc8d662a32",
            "name": "Put Order Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.update.json",
            "description": "Update existing order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "comment",
                    "description": "Specifies order comment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_modified",
                    "description": "Specifies order's  modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_finished",
                    "description": "Specifies order's  finished date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_payment_method",
                    "description": "Defines order payment method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "send_notifications",
                    "description": "Send notifications to customer after order was created",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "b16d2924945f79ff9899bb02de02d7b1",
            "name": "Get Order Status List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.status.list.json",
            "description": "Retrieve list of statuses",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "4980cb846ada2d1a6a8c1d9eebeaa07c",
            "name": "Get Order Financial Status List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.financial_status.list.json",
            "description": "Retrieve list of financial statuses",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "04d6cc6d51bbfb551e60df4fe9d1a0e4",
            "name": "Get Order Abandoned List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.abandoned.list.json",
            "description": "Get list of orders that were left by customers before completing the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "skip_empty_email",
                    "description": "Filter empty emails",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "c830dbac30028190265f505d1736a4f6",
            "name": "Get Order Shipment List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.list.json",
            "description": "Get list of shipments by orders.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "1d84b87d06ed53737e627347232ebb92",
            "name": "Post Order Shipment Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.add.json",
            "description": "Add a shipment to the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "8cf0d431a5a2d32198b0564d452ebf66",
            "name": "Put Order Shipment Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.update.json",
            "description": "Update order's shipment information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "436f6b4920b3fe176b07667d7ea824a4",
            "name": "Post Order Shipment Tracking Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.tracking.add.json",
            "description": "Add order shipment's tracking info.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "cec79b467908dedd9c1c3d2a93e8a833",
            "name": "Post Order Refund Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.refund.add.json",
            "description": "Add a refund to the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "8d2996705f9507ce5b771b9fe6044c06",
            "name": "Get Basket Live Shipping Service List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.list.json",
            "description": "Retrieve a list of live shipping rate services. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "f87a0407ea0adb227fbcc63b8cba6140",
            "name": "Get Basket Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.info.json",
            "description": "Retrieve basket information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "dc35c06831a04b14b753f840f006e247",
            "name": "Post Basket Live Shipping Service Create",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.create.json",
            "description": "Create live shipping rate service. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "9081e58e1bba36715a47dda9cd4150e6",
            "name": "Delete Basket Live Shipping Service Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.delete.json",
            "description": "Delete live shipping rate service. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "e58f70349179ab4cddea2f08de8bb612",
            "name": "Get Customer List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.list.json",
            "description": "Get list of customers from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_list_id",
                    "description": "The numeric ID of the customer list in Demandware.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "ce4b73c045c42ab08510dababddeb84b",
            "name": "Get Customer Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.count.json",
            "description": "Get number of customers from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_list_id",
                    "description": "The numeric ID of the customer list in Demandware.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "d97d1ce6725fdb4848a6125ee5220234",
            "name": "Get Customer Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.info.json",
            "description": "Get customers' details from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "a6f269f3505de5ae2e3200c68d8745be",
            "name": "Get Customer Find",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.find.json",
            "description": "Find customers in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "2c68f0583a6c721b3b54b76a82ebcaab",
            "name": "Post Customer Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.add.json",
            "description": "Add customer into store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "2e5b703ee0f65bbb193c101a65949b8a",
            "name": "Get Attribute List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.list.json",
            "description": "Get attributes list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_ids",
                    "description": "Filter attributes by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "system",
                    "description": "True if attribute is system",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "d0059a4bb3b29b95b81f24dc1237c457",
            "name": "Get Attribute Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.info.json",
            "description": "Get attribute info",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "7dccab80a0dd0aa74b42b7f64267fd66",
            "name": "Get Attribute Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.count.json",
            "description": "Get attributes count",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "542de677b5194ea3839a43e6a231a3cb",
            "name": "Get Attribute Type List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.type.list.json",
            "description": "Get list of supported attributes types",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "5c14e06e124fc6c4a13f230160983d8d",
            "name": "Delete Attribute Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.delete.json",
            "description": "Delete attribute from store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "591cb7c9d1d2dd8abde79fde27bd49b9",
            "name": "Post Attribute Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.add.json",
            "description": "Add new attribute",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_global",
                    "description": "Attribute saving scope",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_searchable",
                    "description": "Use attribute in Quick Search",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_filterable",
                    "description": "Use In Layered Navigation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_comparable",
                    "description": "Comparable on Front-end",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_html_allowed_on_front",
                    "description": "Allow HTML Tags on Frontend",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_filterable_in_search",
                    "description": "Use In Search Results Layered Navigation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_configurable",
                    "description": "Use To Create Configurable Product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_visible_in_advanced_search",
                    "description": "Use in Advanced Search",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_used_for_promo_rules",
                    "description": "Use for Promo Rule Conditions",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "used_in_product_listing",
                    "description": "Used in Product Listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "used_for_sort_by",
                    "description": "Used for Sorting in Product Listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apply_to",
                    "description": "Types of products which can have this attribute",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "31fe8706ea41f825cf6ca448671df110",
            "name": "Post Attribute Assign Group",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.assign.group.json",
            "description": "Assign attribute to the group",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "287b6abdb76f6ce0c8b02fa44debcf76",
            "name": "Post Attribute Assign Set",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.assign.set.json",
            "description": "Assign attribute to the attribute set",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "ec1f10ff9348b4da9241bedb27c30f6a",
            "name": "Post Attribute Unassign Group",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.unassign.group.json",
            "description": "Unassign attribute from group",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "f5aa42500e083def1b5de7bf9cd25e72",
            "name": "Post Attribute Unassign Set",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.unassign.set.json",
            "description": "Unassign attribute from attribute set",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "a3a7e54f44f91fdd737c5bc326e03062",
            "name": "Get Attribute Group List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.group.list.json",
            "description": "Get attribute group list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "161770776738fefe03a6db5711ac41d8",
            "name": "Get Attribute Attributeset List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.attributeset.list.json",
            "description": "Get attribute_set list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "fc616c9be86d703c420268213697875b",
            "name": "Get Product Attribute List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.attribute.list.json",
            "description": "Get list of attributes.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_id",
                    "description": "Retrieves info for specified attribute_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_group_id",
                    "description": "Filter by attribute_group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "set_name",
                    "description": "Retrieves attributes specified by set_name in Magento",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "b6ec47068c92fb652e1d1da8ae0ef1af",
            "name": "Post Product Attribute Value Set",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.attribute.value.set.json",
            "description": "Set attribute value to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_id",
                    "description": "Retrieves info for specified attribute_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_group_id",
                    "description": "Filter by attribute_group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_name",
                    "description": "Define attribute name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value",
                    "description": "Defines condition value, can be comma separated according to the operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value_id",
                    "description": "Define attribute value id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "1e4d13893b6430229a2530b516038785",
            "name": "Post Product Option Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.add.json",
            "description": "Add product option from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_values",
                    "description": "Defines option values that has to be added in Magento",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "6b1124f31f2bf96b94cb214ba369dd84",
            "name": "Get Product Option List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.list.json",
            "description": "Get list of options.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "dd0ded8080bab2498284bbc4464d98b1",
            "name": "Post Product Option Assign",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.assign.json",
            "description": "Assign option from product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_id",
                    "description": "Defines option id which has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "96761f389a90ebbc93161feca0e881da",
            "name": "Post Product Option Value Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.add.json",
            "description": "Add product option item from option.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "option_id",
                    "description": "Defines option id which has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_value",
                    "description": "Defines option value that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "137d2df61f7143d2b08f580e3dfea341",
            "name": "Post Product Option Value Assign",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.assign.json",
            "description": "Assign product option item from product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_option_id",
                    "description": "Defines product's option id where the value has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_value_id",
                    "description": "Defines value id that has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "fe1e02c040e02ffea84ab652cd6cd582",
            "name": "Put Product Option Value Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.update.json",
            "description": "Update product option item from option.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "option_value_id",
                    "description": "Defines value id that has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "00bef1520f8925655194b1697d5b558c",
            "name": "Get Product Review List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.review.list.json",
            "description": "Get reviews of a specific product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "252a6561b3cbda38441ed639071334f5",
            "name": "Post Product Variant Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.add.json",
            "description": "Add variant to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "model",
                    "description": "Defines product model that has to be updated",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attributes",
                    "description": "Defines variant's attributes list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_modified",
                    "description": "Defines the date of special price modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "available_for_view",
                    "description": "Specifies the set of visible\/invisible product's variants for users",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "available_for_sale",
                    "description": "Specifies the set of visible\/invisible product's variants for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_at",
                    "description": "Defines the date of entity creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tax_class_id",
                    "description": "Defines tax classes where entity has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "f42b479d9656bb8f8ff16edb029e7ae4",
            "name": "Get Product Child Item Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.info.json",
            "description": "Get child for specific product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "bd089c5c7800837599a94b9453cc15a5",
            "name": "Get Product Child Item List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.list.json",
            "description": "Get child items list of specific product(s).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "489ad9f42fa7fbedc1f5afecc2f10234",
            "name": "Get Product Child Item Find",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.find.json",
            "description": "Search product child item (bundled item or configurable product variant) in store catalog.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "0f136a452548a4c2b947a81469de6d7b",
            "name": "Get Product Variant List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.list.json",
            "description": "Get list variants.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "9d1efd03840e5e9cf87d4ec9e289eac1",
            "name": "Get Product Variant Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.info.json",
            "description": "Get variant info.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "1d0779e8605d169b9a83cc8ac4079b9a",
            "name": "Get Product Variant Count",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.count.json",
            "description": "Get count variants.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "694399de597ed081c48563e66e399fe4",
            "name": "Put Product Variant Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.update.json",
            "description": "Update variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reserve_quantity",
                    "description": "This parameter allows to reserve\/unreserve product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "increase_quantity",
                    "description": "Defines the incremental changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reduce_quantity",
                    "description": "Defines the decrement changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manage_stock",
                    "description": "Defines inventory tracking for product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "in_stock",
                    "description": "Set stock status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "f6b0a64c70d5144fe2293a6dcb58a808",
            "name": "Delete Product Variant Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.delete.json",
            "description": "Delete variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "3e8568a028c87e4347aa0363aa4b469e",
            "name": "Post Product Variant Price Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.add.json",
            "description": "Add some prices to the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "d86f9905c38b53894c69f309d8fb81c1",
            "name": "Put Product Variant Price Update",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.update.json",
            "description": "Update some prices of the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "52306ce2b857e20f3afb5d029d89c06b",
            "name": "Delete Product Variant Price Delete",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.delete.json",
            "description": "Delete some prices of the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_prices",
                    "description": "Defines product's group prices",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "b9b69cd11f305d11f02c0b3acbd648cf",
            "name": "Post Product Tax Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.tax.add.json",
            "description": "Add tax class and tax rate to store and assign to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "8e06d7818ed60158ac8bf888ade8731f",
            "name": "Post Product Manufacturer Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.manufacturer.add.json",
            "description": "Add manufacturer to store and assign to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "37d7c81fa0e2ee74022c7239c0ec232c",
            "name": "Get Product Brand List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.brand.list.json",
            "description": "Get list of brands from your store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "brand_ids",
                    "description": "Retrieves brands specified by brand ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "8cd2bd311c5af29151a9de3acfbaf02c",
            "name": "Post Product Currency Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.currency.add.json",
            "description": "Add currency and\/or set default in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "iso3",
                    "description": "Specifies standardized currency code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "rate",
                    "description": "Defines the numerical identifier against to the major currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "symbol_left",
                    "description": "Defines the symbol that is located before the currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "symbol_right",
                    "description": "Defines the symbol that is located after the currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "default",
                    "description": "Specifies currency's default meaning",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "5c8f45c6fc0c3917127c72957e66cb03",
            "name": "Get Product Currency List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.currency.list.json",
            "description": "Get list of currencies",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "default",
                    "description": "Specifies currency's default meaning",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "507b111052a00eb9dcef9dc976596993",
            "name": "Post Product Store Assign",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.store.assign.json",
            "description": "Assign product to store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "a07e4d762399495516adbfa0d5f5552a",
            "name": "Get Tax Class Info",
            "url": "http:\/\/api.api2cart.com\/v1.1\/tax.class.info.json",
            "description": "Get info about tax",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "tax_class_id",
                    "description": "Defines tax classes where entity has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "bcb3587dfce3ce8f2f6f93fed36ab9c0",
            "name": "Post Basket Item Add",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.item.add.json",
            "description": "Add item to basket",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "variant_id",
                    "description": "Defines product's variants specified by variant id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "4a6d1d4fb4047b02edc12003791f3409",
            "name": "Get Subscriber List",
            "url": "http:\/\/api.api2cart.com\/v1.1\/subscriber.list.json",
            "description": "Get subscribers list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "subscribed",
                    "description": "Filter by subscription status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Filter subscribers by email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        },
        {
            "id": "c575117f3586c8f24901d3e5302d9e4c",
            "name": "Get Bridge Download",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.download.json",
            "description": "Download bridge for store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "b3d8e30b584abdccfcef88fb4aafc2b2",
            "rawModeData": ""
        }
    ]
}