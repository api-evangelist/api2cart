{
    "id": "f00cfbcd28d6344b97881c978896f579",
    "name": "Swagger API2Cart",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "22dc6e5aa4b0b2386d56f199e4836524",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.create.json",
            "description": "Create webhook on the store and subscribe to it.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fields",
                    "description": "Fields the webhook should send",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "7cd881791d324a53f300163050bb764b",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.list.json",
            "description": "List registered webhook on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "36542bacba1e8ef635e639a49ca12a47",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.count.json",
            "description": "Count registered webhooks on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "ef8d1cf9bbc141407165785350db79da",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.events.json",
            "description": "List all Webhooks that are available on this store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "b14bc28ec82e349570510ebb148bb4e6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.delete.json",
            "description": "Delete registered webhook on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "3e96101fc5583594f34ffadc5ae07986",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.update.json",
            "description": "Update Webhooks parameters.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fields",
                    "description": "Fields the webhook should send",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "f04925d3e2b89dc179628aecb329e401",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.create.json",
            "description": "Add store to the account",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cart_id",
                    "description": "Store\u2019s identifier which you can get from cart_list method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "verify",
                    "description": "Enables or disables cart's verification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_host",
                    "description": "FTP connection host",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_user",
                    "description": "FTP User",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_password",
                    "description": "FTP Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_port",
                    "description": "FTP Port",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_store_dir",
                    "description": "FTP Store dir",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_3dcart",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdminAccount",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiPath",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiKey",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessToken",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_shopify",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiPassword",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessToken_shopify",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiUsername",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EncryptedPassword",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiUser_adnsf",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiPass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessKey_scelite",
                    "description": "Shopping Cart Elite Access Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_scelite",
                    "description": "Shopping Cart Elite API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiSecretKey_scelite",
                    "description": "Shopping Cart Elite API Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "privateKey",
                    "description": "3DCart Application Private Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "appToken",
                    "description": "3DCart Token from Application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tokenSecret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "dw_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "dw_api_pass",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "environment",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_id",
                    "description": "Omni Commerce Connector Client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_secret",
                    "description": "Omni Commerce Connector Client Secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "6487efea3fcbe3e6e8e5a07d0c314976",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.validate.json",
            "description": "Check store availability, bridge connection for the downloadable carts, identify DB prefix, validate API accesses for API carts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "de6039d31b146fd29d3aa3c28b4f6fc5",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.list.json",
            "description": "Get list of supported carts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "27c42c898bd014935c242bb808218b18",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.bridge.json",
            "description": "Get bridge key and store key",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "04a411e98c9593e028174c82217d2d56",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.delete.json",
            "description": "Remove store from API2Cart",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "2668494b18fb6163c53438bc992e1f58",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.disconnect.json",
            "description": "Disconnect with the store and clear store session data.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "delete_bridge",
                    "description": "Identifies if there is a necessity to delete bridge",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "581f22be80d4a8ea579d7fb4b36a7677",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.methods.json",
            "description": "Get list of cart methods",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "ca6920254e86fb34b322c42550c64f39",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.config.json",
            "description": "Get list of cart configs",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "790bd51e253d7196039a98a8291f1da9",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.config.update.json",
            "description": "Use this API method to update custom data in client database.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "411e6750cb8d0e6dbbc089cd52323b81",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.count.json",
            "description": "Get cart coupons count.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_from",
                    "description": "Filter entity by date_start (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_to",
                    "description": "Filter entity by date_start (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_from",
                    "description": "Filter entity by date_end (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_to",
                    "description": "Filter entity by date_end (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "77d42ff8b0d61b0362a9b255b6c6f45a",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.list.json",
            "description": "Get cart coupon discounts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "coupons_ids",
                    "description": "Filter coupons by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_from",
                    "description": "Filter entity by date_start (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_to",
                    "description": "Filter entity by date_start (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_from",
                    "description": "Filter entity by date_end (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_to",
                    "description": "Filter entity by date_end (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "04d93c6a5875127ee7d97a2b7d1327a6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.count.json",
            "description": "Get gift cards count.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "23029d8667b984722e3692d082e7b591",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.list.json",
            "description": "Get gift cards list.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "b44c95d1b138ead2a029136a7bcbef66",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.add.json",
            "description": "Create new gift card",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "amount",
                    "description": "Defines the gift card amount value.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Gift card code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "owner_email",
                    "description": "Gift card owner email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d7846896d3f457ad31f6b718ccbbc965",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.add.json",
            "description": "Create new coupon",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Gift card code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "codes",
                    "description": "Entity codes",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_type",
                    "description": "Coupon discount type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_apply_to",
                    "description": "Defines where discount should be applied",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_scope",
                    "description": "Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_amount",
                    "description": "Defines the discount amount value.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start",
                    "description": "Defines when discount code will be available.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end",
                    "description": "Defines when discount code will be expired.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "usage_limit",
                    "description": "Usage limit for coupon.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "usage_limit_per_customer",
                    "description": "Usage limit per customer.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_entity",
                    "description": "Defines entity for action condition.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_key",
                    "description": "Defines entity attribute code for action condition.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_operator",
                    "description": "Defines condition operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_value",
                    "description": "Defines condition attribute value\/s. Can be comma separated string.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "f194245111ef034d097637c0bdf90cf3",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.condition.add.json",
            "description": "Create new coupon condition",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "coupon_id",
                    "description": "Coupon Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "target",
                    "description": "Defines condition operator",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "key",
                    "description": "Defines condition entity attribute key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "operator",
                    "description": "Defines condition operator",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value",
                    "description": "Defines condition value, can be comma separated according to the operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "6af4834842bc5e88e1cce4c5662c1400",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.delete.json",
            "description": "Delete coupon",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "05fd439c72cb4443d4880c627f8e3dd3",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.list.json",
            "description": "Get scripts installed to the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "script_ids",
                    "description": "Retrieves only scripts with specific ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "69b4aef4eebda9ceb62ab334aab6e0bf",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.add.json",
            "description": "Add new script to the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "html",
                    "description": "An html string containing exactly one `script` tag.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "src",
                    "description": "The URL of the remote script",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "load_method",
                    "description": "The load method to use for the script",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "scope",
                    "description": "The page or pages on the online store where the script should be included",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "da73f86b3864d9569a5c4993e4462580",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.delete.json",
            "description": "Remove script from the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "df726bcf60a2dda2a6820cd7dcb0238b",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.info.json",
            "description": "Get cart information",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "284f4589050be0a2db5591da68ddc8fc",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.clear_cache.json",
            "description": "Clear cache on store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cache_type",
                    "description": "Defines which cache should be cleared.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "79462cd380389042226e959fe98528a7",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.plugin.list.json",
            "description": "Get list of installed plugins",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d51937e72e58354b6a2e7e9417f8326f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.shipping_zones.list.json",
            "description": "Get list of shipping zones",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "45b562c46d40a2e19bc7a89eec97bee2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.cart.list.json",
            "description": "Get list of carts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "request_from_date",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "request_to_date",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "5264522148f8e116877c48b97bbceac9",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.cart.add.json",
            "description": "Add store to the account",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cart_id",
                    "description": "Store\u2019s identifier which you can get from cart_list method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "verify",
                    "description": "Enables or disables cart's verification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_host",
                    "description": "FTP connection host",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_user",
                    "description": "FTP User",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_password",
                    "description": "FTP Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_port",
                    "description": "FTP Port",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_store_dir",
                    "description": "FTP Store dir",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "3dcartapi_api_key",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_user",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_pass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_admin_account",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_path",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_key",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_api_password",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_env_type",
                    "description": "Demandware environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_acess_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_store_id",
                    "description": "Store Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_token_secret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_key",
                    "description": "Neto API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_username",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_key",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_password",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_password",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_id",
                    "description": "Omni Commerce Connector Client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_secret",
                    "description": "Omni Commerce Connector Client Secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "aa69c1fc6079cf95e828a65088338253",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.config.update.json",
            "description": "Update configs in the API2Cart database.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "new_store_key",
                    "description": "Update store key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "3dcartapi_api_key",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_user",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_pass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_admin_account",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_path",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_key",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_api_password",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_env_type",
                    "description": "Demandware environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_acess_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_store_id",
                    "description": "Store Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_token_secret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_key",
                    "description": "Neto API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_username",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_key",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_password",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_password",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "833320e537eb1fc2f5515c3f0e0bf1ba",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.failed_webhooks.json",
            "description": "List webhooks that was not delivered to the callback.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "c6208d6cbdbcda1f079e0a264289823b",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.supported_platforms.json",
            "description": "Get list of supported platforms",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "2aa5a3d2109034be823b56d0404b36ca",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.download.file",
            "description": "Download bridge for store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "whitelabel",
                    "description": "Identifies if there is a necessity to download whitelabel bridge.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "61c894bba54ff86f3dd41f95d5809b17",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.update.json",
            "description": "Update bridge in the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "3d543c34721c3d41fef4857591445528",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.delete.json",
            "description": "Delete bridge from the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "318bbea25ae2341d19153258dd1b00ba",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.list.json",
            "description": "Get list of products from your store. Returns 10 products by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_view",
                    "description": "Specifies the set of visible\/invisible products",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_params",
                    "description": "Set this parameter in order to choose which product variants fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "since_id",
                    "description": "Retrieve products starting from the specified product id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_cache",
                    "description": "Disable cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "97295f959f718fc488532e17f353dd33",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.count.json",
            "description": "Count products in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_view",
                    "description": "Specifies the set of visible\/invisible products",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "c131f09dd5cbca598142079fcc6310fb",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.info.json",
            "description": "Get product info about product ID *** or specify other product ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_params",
                    "description": "Set this parameter in order to choose which product variants fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "48f397da95e3805363427b630ca92edf",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.find.json",
            "description": "Search product in store catalog. \"Apple\" is specified here by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_what",
                    "description": "Parameter's value specifies the entity that has to be found",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "20a548a0c3a989b8e93231fce5d9bf78",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.fields.json",
            "description": "Retrieve all available fields for product item in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "79cd0d8ae6f27323dae73a0a5a2c811d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.add.json",
            "description": "Add new product to store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "200190310548fc4affc199f18a60595c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.update.json",
            "description": "Update price and quantity for a specific product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "model",
                    "description": "Defines product model that has to be updated",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "cost_price",
                    "description": "Defines new product's cost price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "retail_price",
                    "description": "Defines new product's retail price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "increase_quantity",
                    "description": "Defines the incremental changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reduce_quantity",
                    "description": "Defines the decrement changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reserve_quantity",
                    "description": "This parameter allows to reserve\/unreserve product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manage_stock",
                    "description": "Defines inventory tracking for product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer_id",
                    "description": "Defines product's manufacturer by manufacturer_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "in_stock",
                    "description": "Set stock status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "796c0b104fd588040993ef0a280cd6ef",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.delete.json",
            "description": "Product delete",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "1c1a185efe5801ca68a97da93ce1b692",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.add.json",
            "description": "Add some prices to the product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "344776c81b872f21344a68b63f987699",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.update.json",
            "description": "Update some prices of the product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "6c80e9cba9300e1e8cb50088ed0ecceb",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.delete.json",
            "description": "Delete some prices of the product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_prices",
                    "description": "Defines product's group prices",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "7ae796d07c74885943d8919fe291aa28",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.add.json",
            "description": "Add image to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "mime",
                    "description": "Mime type of image http:\/\/en.wikipedia.org\/wiki\/Internet_media_type.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "content",
                    "description": "Content(body) encoded in base64 of image file",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_id",
                    "description": "Defines product's variants specified by variant id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "variant_ids",
                    "description": "Defines product's variants ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "1fc67644b2d09da1f5cf9a1695e0b875",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.update.json",
            "description": "Update details of image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hidden",
                    "description": "Define is hide image",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "b6d23e91ac4e5ea5efbdf39184f95211",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.delete.json",
            "description": "Delete image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "e258c0babbeb2c57e929ead4975c4489",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.list.json",
            "description": "Get list of categories from store. Returns 4 categories by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "2b753090ed19ea7b5b61134f63f8bcbc",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.count.json",
            "description": "Count categories in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "7d34a40300ec75f2bedbb9ed388921c2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.info.json",
            "description": "Get category info about category ID*** or specify other category ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "e01d243f8ba522936fe676ee76fdbcf8",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.find.json",
            "description": "Search category in store. \"Laptop\" is specified here by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "67a7df19a8adfe76473db3df04b61587",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.add.json",
            "description": "Add new category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "stores_ids",
                    "description": "Create category in the stores that is specified by comma-separated stores' id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_time",
                    "description": "Entity's date creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_time",
                    "description": "Entity's date modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "04d11a19d0c90f8225bdbb06dfc53d19",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.update.json",
            "description": "Update category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "stores_ids",
                    "description": "Create category in the stores that is specified by comma-separated stores' id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_time",
                    "description": "Entity's date modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d87b0613a518bec33d340c01981ff7ac",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.delete.json",
            "description": "Delete category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "b571bc1246670e2c55246c94add44875",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.assign.json",
            "description": "Assign category to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "108bcee471ab429e5e4c053caac797c7",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.unassign.json",
            "description": "Unassign category to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "6fd762d197e65301d28cdb5ad09d69cb",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.image.add.json",
            "description": "Add image to category",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "mime",
                    "description": "Mime type of image http:\/\/en.wikipedia.org\/wiki\/Internet_media_type.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "74f57a18e7a82eb96537223576a37cd6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.image.delete.json",
            "description": "Delete image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_id",
                    "description": "Define image id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "a37ae8321d7b025dee69edc740f30885",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.count.json",
            "description": "Count orders in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_ids",
                    "description": "Counts orders specified by order ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fulfillment_status",
                    "description": "Create order with fulfillment status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shipping_method",
                    "description": "Retrieve entities according to shipping method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d28618db2f4f8dc16f2fa6e35c1ee25c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.list.json",
            "description": "Get list of orders from store. Returns 4 orders by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_ids",
                    "description": "Counts orders specified by order ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "basket_id",
                    "description": "Retrieves order\u2019s info specified by basket id.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fulfillment_status",
                    "description": "Create order with fulfillment status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shipping_method",
                    "description": "Retrieve entities according to shipping method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "skip_order_ids",
                    "description": "Skipped orders by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "df271797d3bad7dccf06beb8544f4cf6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.info.json",
            "description": "Info about a specific order by ID",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "6bad02e88590871fda74eb099e988ddb",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.find.json",
            "description": "Find orders",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "277dc3afc1bdd9a24bec9aac6e83e006",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.add.json",
            "description": "Add a new order to the cart.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "eb4443907c4c354d7670e910506f104d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.update.json",
            "description": "Update existing order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "comment",
                    "description": "Specifies order comment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_modified",
                    "description": "Specifies order's  modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_finished",
                    "description": "Specifies order's  finished date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_payment_method",
                    "description": "Defines order payment method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "send_notifications",
                    "description": "Send notifications to customer after order was created",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "8fe218be8224a7c785eacda4678830db",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.status.list.json",
            "description": "Retrieve list of statuses",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "86620d2a3babda8889fd235bf8cced07",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.financial_status.list.json",
            "description": "Retrieve list of financial statuses",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "ee80fc3c1528a501ac00f90d5f0f3c97",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.abandoned.list.json",
            "description": "Get list of orders that were left by customers before completing the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "skip_empty_email",
                    "description": "Filter empty emails",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "4a697c5a71402520a519210bd15b1188",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.list.json",
            "description": "Get list of shipments by orders.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "a873fad3ee2eb3510e7ed44dc6eb23ca",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.add.json",
            "description": "Add a shipment to the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "86477b65ccf7346904eb9dccf74fa1c7",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.update.json",
            "description": "Update order's shipment information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "c3378ca209614d6795c11f2ebb4bcef3",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.tracking.add.json",
            "description": "Add order shipment's tracking info.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "f760c565ebf88ce202cf617da9a9abba",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.refund.add.json",
            "description": "Add a refund to the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "4be798992a16b14cbc1e02da97520cea",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.list.json",
            "description": "Retrieve a list of live shipping rate services. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "393f1f8968a633b693c2180af818ce84",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.info.json",
            "description": "Retrieve basket information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "be66597f7f988060f89e650719aae0d6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.create.json",
            "description": "Create live shipping rate service. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "80728443b1c22568ee03a96f9e3748a0",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.delete.json",
            "description": "Delete live shipping rate service. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "a1b7408fbbd440ffeb7f0d9e917e421f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.list.json",
            "description": "Get list of customers from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_list_id",
                    "description": "The numeric ID of the customer list in Demandware.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "44ec6eb6dc8552cb415a294f5568d4c6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.count.json",
            "description": "Get number of customers from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_list_id",
                    "description": "The numeric ID of the customer list in Demandware.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "fa9178834f21aac4c14d285db48488a6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.info.json",
            "description": "Get customers' details from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "037d83e98c05090cce29cd8fcf2dc78f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.find.json",
            "description": "Find customers in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "6cdba50116d8fd967684e2b424d3c9bb",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.add.json",
            "description": "Add customer into store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "c5820494800fbb561fc4e0478644ae9c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.list.json",
            "description": "Get attributes list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_ids",
                    "description": "Filter attributes by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "system",
                    "description": "True if attribute is system",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "f58ff92f0fca6387179e11e341e8d2b8",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.info.json",
            "description": "Get attribute info",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "90061497973dc2722c3c94a5130fd289",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.count.json",
            "description": "Get attributes count",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d587c9df6b7d60ae56b934bf6a312241",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.type.list.json",
            "description": "Get list of supported attributes types",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "7da4c052ea83feeb208a3b9e38bf2699",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.delete.json",
            "description": "Delete attribute from store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d8c4a4475c7cc123c2edfe9b6e2bc00a",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.add.json",
            "description": "Add new attribute",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_global",
                    "description": "Attribute saving scope",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_searchable",
                    "description": "Use attribute in Quick Search",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_filterable",
                    "description": "Use In Layered Navigation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_comparable",
                    "description": "Comparable on Front-end",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_html_allowed_on_front",
                    "description": "Allow HTML Tags on Frontend",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_filterable_in_search",
                    "description": "Use In Search Results Layered Navigation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_configurable",
                    "description": "Use To Create Configurable Product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_visible_in_advanced_search",
                    "description": "Use in Advanced Search",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_used_for_promo_rules",
                    "description": "Use for Promo Rule Conditions",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "used_in_product_listing",
                    "description": "Used in Product Listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "used_for_sort_by",
                    "description": "Used for Sorting in Product Listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apply_to",
                    "description": "Types of products which can have this attribute",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "6517be97fb6fa466d714e290d00ca095",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.assign.group.json",
            "description": "Assign attribute to the group",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "278dfebeb9cbbbb583cba6e8b6fc2a92",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.assign.set.json",
            "description": "Assign attribute to the attribute set",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "dd6ecc7261ba80b525f326a98987366f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.unassign.group.json",
            "description": "Unassign attribute from group",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "b6361f61071fa777c6f90b0f2d4c9102",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.unassign.set.json",
            "description": "Unassign attribute from attribute set",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "1044ee02d33bdd927259977c0c6d50b5",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.group.list.json",
            "description": "Get attribute group list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d667237365e27f156aadaead732ffe1a",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.attributeset.list.json",
            "description": "Get attribute_set list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "34c3c997401ebb8b56c48bf930ba5238",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.attribute.list.json",
            "description": "Get list of attributes.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_id",
                    "description": "Retrieves info for specified attribute_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_group_id",
                    "description": "Filter by attribute_group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "set_name",
                    "description": "Retrieves attributes specified by set_name in Magento",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "3735da2943b626fb4024a9fffaa10353",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.attribute.value.set.json",
            "description": "Set attribute value to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_id",
                    "description": "Retrieves info for specified attribute_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_group_id",
                    "description": "Filter by attribute_group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_name",
                    "description": "Define attribute name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value",
                    "description": "Defines condition value, can be comma separated according to the operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value_id",
                    "description": "Define attribute value id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "1db1e5f2566cce220fd7f962f90be2cc",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.add.json",
            "description": "Add product option from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_values",
                    "description": "Defines option values that has to be added in Magento",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "e340d1556d131e751279be86269ad631",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.list.json",
            "description": "Get list of options.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "f3517e75424eebb0ee047816dd5ff255",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.assign.json",
            "description": "Assign option from product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_id",
                    "description": "Defines option id which has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "cc3f3abd214acccb2be51ef80719f0ed",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.add.json",
            "description": "Add product option item from option.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "option_id",
                    "description": "Defines option id which has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_value",
                    "description": "Defines option value that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "15349672c50c6191f5181277a97fba8f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.assign.json",
            "description": "Assign product option item from product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_option_id",
                    "description": "Defines product's option id where the value has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_value_id",
                    "description": "Defines value id that has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "8d90b50c13a2a2edc8152e15428eaeb2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.update.json",
            "description": "Update product option item from option.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "option_value_id",
                    "description": "Defines value id that has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "ae979f3fd6d144d613bec24c8e81e920",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.review.list.json",
            "description": "Get reviews of a specific product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "4ecf1f32a540cc1ec7ce9e9386c023dc",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.add.json",
            "description": "Add variant to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "model",
                    "description": "Defines product model that has to be updated",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attributes",
                    "description": "Defines variant's attributes list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_modified",
                    "description": "Defines the date of special price modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "available_for_view",
                    "description": "Specifies the set of visible\/invisible product's variants for users",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "available_for_sale",
                    "description": "Specifies the set of visible\/invisible product's variants for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_at",
                    "description": "Defines the date of entity creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tax_class_id",
                    "description": "Defines tax classes where entity has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "a33740ad41e3950f02e864055665afd7",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.info.json",
            "description": "Get child for specific product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "8bc6222befccb75b27ffba2e33e1e691",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.list.json",
            "description": "Get child items list of specific product(s).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "83ee6e6cd02f3aa22f457479667a0bf0",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.find.json",
            "description": "Search product child item (bundled item or configurable product variant) in store catalog.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "f58d7ba1210ffe02fd9c1073d571a2f0",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.list.json",
            "description": "Get list variants.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "a81752ec7e031a39b7acae9cf02dc1c8",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.info.json",
            "description": "Get variant info.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "17dc177c692a66f505c43880386581d1",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.count.json",
            "description": "Get count variants.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "01dbf3059213d9cd3dac1fcf7ee47ac1",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.update.json",
            "description": "Update variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reserve_quantity",
                    "description": "This parameter allows to reserve\/unreserve product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "increase_quantity",
                    "description": "Defines the incremental changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reduce_quantity",
                    "description": "Defines the decrement changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manage_stock",
                    "description": "Defines inventory tracking for product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "in_stock",
                    "description": "Set stock status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "4fdb3d384e0fe65b7198111d1c42515f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.delete.json",
            "description": "Delete variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "f9a13533828e7a8d82c2189c077c1531",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.add.json",
            "description": "Add some prices to the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "6cd32ea892dac50d8e2c6980fdb393f9",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.update.json",
            "description": "Update some prices of the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d97f71e10c42ec221b3defdae80cccf6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.delete.json",
            "description": "Delete some prices of the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_prices",
                    "description": "Defines product's group prices",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "70c82fcb3abd103f7a02a3ed965db880",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.tax.add.json",
            "description": "Add tax class and tax rate to store and assign to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "bb648d4bdbc70bb9a32324df1651fc93",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.manufacturer.add.json",
            "description": "Add manufacturer to store and assign to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "e7afaf1285cee78cd72691dccc5745e1",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.brand.list.json",
            "description": "Get list of brands from your store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "brand_ids",
                    "description": "Retrieves brands specified by brand ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "2ed8f8d712219de325338cd42f312867",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.currency.add.json",
            "description": "Add currency and\/or set default in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "iso3",
                    "description": "Specifies standardized currency code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "rate",
                    "description": "Defines the numerical identifier against to the major currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "symbol_left",
                    "description": "Defines the symbol that is located before the currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "symbol_right",
                    "description": "Defines the symbol that is located after the currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "default",
                    "description": "Specifies currency's default meaning",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "af01d2f5441d7c9e305873e15adcb4c3",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.currency.list.json",
            "description": "Get list of currencies",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "default",
                    "description": "Specifies currency's default meaning",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d50a76ef7965a9184f328a6f604b6950",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.store.assign.json",
            "description": "Assign product to store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "d3b76d2e7721039a7452558545840bcf",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/tax.class.info.json",
            "description": "Get info about tax",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "tax_class_id",
                    "description": "Defines tax classes where entity has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "246d7ad074584f96b314f0e4d9c3d218",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.item.add.json",
            "description": "Add item to basket",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "variant_id",
                    "description": "Defines product's variants specified by variant id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "a8fc080097c1591974857b0c32ce04a5",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/subscriber.list.json",
            "description": "Get subscribers list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "subscribed",
                    "description": "Filter by subscription status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Filter subscribers by email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        },
        {
            "id": "26854f191402fdd21a48bc0666702d6d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.download.json",
            "description": "Download bridge for store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "f00cfbcd28d6344b97881c978896f579",
            "rawModeData": ""
        }
    ]
}