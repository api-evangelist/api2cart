{
    "id": "75399631a0558eec7b934aca3758cd60",
    "name": "Swagger API2Cart",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "69f038e461b2ea70e4487a63c4fd9c85",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.create.json",
            "description": "Create webhook on the store and subscribe to it.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fields",
                    "description": "Fields the webhook should send",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "354ef15ddab1d098d37dc23bb3c9977b",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.list.json",
            "description": "List registered webhook on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "972f46260a332eb99c2cac06af786e8d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.count.json",
            "description": "Count registered webhooks on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action",
                    "description": "Specify what action (event) will trigger the webhook (e.g add, delete, or update)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "985bb621fe3af49c433f7e38839acaa5",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.events.json",
            "description": "List all Webhooks that are available on this store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "a88250ea88e51d9488c1ab35435d787e",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.delete.json",
            "description": "Delete registered webhook on the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "75e38b75fd77ca7a78a73242ad48757e",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/webhook.update.json",
            "description": "Update Webhooks parameters.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fields",
                    "description": "Fields the webhook should send",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "active",
                    "description": "Webhook status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "8a74bc616181773e48d27a288510cb91",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.create.json",
            "description": "Add store to the account",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cart_id",
                    "description": "Store\u2019s identifier which you can get from cart_list method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "verify",
                    "description": "Enables or disables cart's verification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_host",
                    "description": "FTP connection host",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_user",
                    "description": "FTP User",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_password",
                    "description": "FTP Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_port",
                    "description": "FTP Port",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_store_dir",
                    "description": "FTP Store dir",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_3dcart",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdminAccount",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiPath",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiKey",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessToken",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_shopify",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiPassword",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessToken_shopify",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiUsername",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EncryptedPassword",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiUser_adnsf",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiPass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "accessKey_scelite",
                    "description": "Shopping Cart Elite Access Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiKey_scelite",
                    "description": "Shopping Cart Elite API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apiSecretKey_scelite",
                    "description": "Shopping Cart Elite API Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "privateKey",
                    "description": "3DCart Application Private Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "appToken",
                    "description": "3DCart Token from Application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tokenSecret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "dw_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "dw_api_pass",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "environment",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_id",
                    "description": "Omni Commerce Connector Client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_secret",
                    "description": "Omni Commerce Connector Client Secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "b61704e676d50be32e49c692b7e3b22f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.validate.json",
            "description": "Check store availability, bridge connection for the downloadable carts, identify DB prefix, validate API accesses for API carts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "bfecc77a2f5d60539056e147b04f9e95",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.list.json",
            "description": "Get list of supported carts",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "a37996581f841959064a2b457ed48c0c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.bridge.json",
            "description": "Get bridge key and store key",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "4c9f7db10f355f6db673305fa1615351",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.delete.json",
            "description": "Remove store from API2Cart",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "b8f98cd0bf385d0067dba85c0c4783af",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.disconnect.json",
            "description": "Disconnect with the store and clear store session data.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "delete_bridge",
                    "description": "Identifies if there is a necessity to delete bridge",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "511d445fd8b635f5842bc523cea83c86",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.methods.json",
            "description": "Get list of cart methods",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "cc660e943002158c452de8dc077e0cb7",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.config.json",
            "description": "Get list of cart configs",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "9d3f8b6f7d4984d3a940f250ce945e2b",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.config.update.json",
            "description": "Use this API method to update custom data in client database.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "4d2927775d8de21dabb6a750ab8e2fda",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.count.json",
            "description": "Get cart coupons count.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_from",
                    "description": "Filter entity by date_start (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_to",
                    "description": "Filter entity by date_start (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_from",
                    "description": "Filter entity by date_end (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_to",
                    "description": "Filter entity by date_end (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "14a179b2edac1db9764c038a096de084",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.list.json",
            "description": "Get cart coupon discounts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "coupons_ids",
                    "description": "Filter coupons by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_from",
                    "description": "Filter entity by date_start (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start_to",
                    "description": "Filter entity by date_start (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_from",
                    "description": "Filter entity by date_end (greater or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end_to",
                    "description": "Filter entity by date_end (less or equal)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "5799b991743cf75bd964a9e7835734d3",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.count.json",
            "description": "Get gift cards count.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "1d76f175f5e1764ba6b18fb0a18425a3",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.list.json",
            "description": "Get gift cards list.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "c44725301ead0c5f99fd4280787a8c12",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.giftcard.add.json",
            "description": "Create new gift card",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "amount",
                    "description": "Defines the gift card amount value.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Gift card code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "owner_email",
                    "description": "Gift card owner email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "86959260674cfadbc23fd529da230203",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.add.json",
            "description": "Create new coupon",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "code",
                    "description": "Gift card code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "codes",
                    "description": "Entity codes",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_type",
                    "description": "Coupon discount type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_apply_to",
                    "description": "Defines where discount should be applied",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_scope",
                    "description": "Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_amount",
                    "description": "Defines the discount amount value.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_start",
                    "description": "Defines when discount code will be available.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_end",
                    "description": "Defines when discount code will be expired.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "usage_limit",
                    "description": "Usage limit for coupon.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "usage_limit_per_customer",
                    "description": "Usage limit per customer.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_entity",
                    "description": "Defines entity for action condition.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_key",
                    "description": "Defines entity attribute code for action condition.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_operator",
                    "description": "Defines condition operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "action_condition_value",
                    "description": "Defines condition attribute value\/s. Can be comma separated string.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "aada09e4bd144994c713bbf34245aa9d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.condition.add.json",
            "description": "Create new coupon condition",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "coupon_id",
                    "description": "Coupon Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "target",
                    "description": "Defines condition operator",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "entity",
                    "description": "Specify the entity that you want to enable webhooks for (e.g product, order, customer, category)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "key",
                    "description": "Defines condition entity attribute key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "operator",
                    "description": "Defines condition operator",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value",
                    "description": "Defines condition value, can be comma separated according to the operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "92729e2759ce6cdaee0f3c772351d6c0",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.coupon.delete.json",
            "description": "Delete coupon",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "47362ab76e5a0037ac1afb6f87f38dcd",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.list.json",
            "description": "Get scripts installed to the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "script_ids",
                    "description": "Retrieves only scripts with specific ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "0ca91d32bbfd43772fdee6c753a07687",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.add.json",
            "description": "Add new script to the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "html",
                    "description": "An html string containing exactly one `script` tag.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "src",
                    "description": "The URL of the remote script",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "load_method",
                    "description": "The load method to use for the script",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "scope",
                    "description": "The page or pages on the online store where the script should be included",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "962846a4c60bce4f7b499fbd38a88055",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.script.delete.json",
            "description": "Remove script from the storefront",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "296584854c653ffa3804858aa03df9a6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.info.json",
            "description": "Get cart information",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "ffcb017d544e023c1d05bad9d6ae670a",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.clear_cache.json",
            "description": "Clear cache on store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cache_type",
                    "description": "Defines which cache should be cleared.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "99cca3cf1032aa155051f1256199dd7c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.plugin.list.json",
            "description": "Get list of installed plugins",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "beb9ff68c2b8e17666a1f739938e69ce",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/cart.shipping_zones.list.json",
            "description": "Get list of shipping zones",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "92ee6282951a1918fdc2c9f0bc0293b2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.cart.list.json",
            "description": "Get list of carts.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "request_from_date",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "request_to_date",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "2b4a5cafe449adb63dee3724826500a4",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.cart.add.json",
            "description": "Add store to the account",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "cart_id",
                    "description": "Store\u2019s identifier which you can get from cart_list method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_url",
                    "description": "A web address of a store that you would like to connect to API2Cart",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_key",
                    "description": "Set this parameter if bridge is already uploaded to store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validate_version",
                    "description": "Specify if api2cart should validate cart version",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "verify",
                    "description": "Enables or disables cart's verification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_host",
                    "description": "FTP connection host",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_user",
                    "description": "FTP User",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_password",
                    "description": "FTP Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_port",
                    "description": "FTP Port",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ftp_store_dir",
                    "description": "FTP Store dir",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "3dcartapi_api_key",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_user",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_pass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_admin_account",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_path",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_key",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_api_password",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_env_type",
                    "description": "Demandware environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_acess_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_store_id",
                    "description": "Store Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_token_secret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_key",
                    "description": "Neto API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_username",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_key",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_password",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_password",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_id",
                    "description": "Omni Commerce Connector Client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hybris_client_secret",
                    "description": "Omni Commerce Connector Client Secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "a4dcdcbe5f02ce6cc052dc014ddac4c2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.config.update.json",
            "description": "Update configs in the API2Cart database.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "new_store_key",
                    "description": "Update store key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bridge_url",
                    "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_root",
                    "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "db_tables_prefix",
                    "description": "This parameter is deprecated for this method. Please, use this parameter in method account.config.update",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "3dcartapi_api_key",
                    "description": "3DCart API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_seller_id",
                    "description": "Seller Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_marketplaces_ids",
                    "description": "Comma separated marketplaces ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_secret_key",
                    "description": "Amazon Secret Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "amazon_access_key_id",
                    "description": "Amazon Secret Key Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_user",
                    "description": "It's a AspDotNetStorefront account for which API is available",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "aspdotnetstorefront_api_pass",
                    "description": "AspDotNetStorefront API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_admin_account",
                    "description": "It's a BigCommerce account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_path",
                    "description": "BigCommerce API URL",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_api_key",
                    "description": "Bigcommerce API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "bigcommerceapi_context",
                    "description": "API Path section unique to the store",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_client_id",
                    "description": "Demandware client id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_api_password",
                    "description": "Demandware api password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_name",
                    "description": "Demandware user name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_user_password",
                    "description": "Demandware user password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "demandware_env_type",
                    "description": "Demandware environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_id",
                    "description": "Application ID (AppID).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_client_secret",
                    "description": "Shared Secret from eBay application",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_runame",
                    "description": "The RuName value that eBay assigns to your application.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_access_token",
                    "description": "Used to authenticate API requests.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_refresh_token",
                    "description": "Used to renew the access token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_environment",
                    "description": "eBay environment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ebay_site_id",
                    "description": "eBay global ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_acess_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ecwid_store_id",
                    "description": "Store Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_keystring",
                    "description": "Etsy keystring",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_shared_secret",
                    "description": "Etsy shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "etsy_token_secret",
                    "description": "Secret token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_key",
                    "description": "Neto API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "neto_api_username",
                    "description": "Neto User Name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_key",
                    "description": "Shopify API Key",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_api_password",
                    "description": "Shopify API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shopify_access_token",
                    "description": "Access token authorizing the app to access resources on behalf of a user",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_login",
                    "description": "It's a Volusion account for which API is enabled",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "volusion_password",
                    "description": "Volusion API Password",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_id",
                    "description": "Walmart client ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "walmart_client_secret",
                    "description": "Walmart client secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "client_id",
                    "description": "Client ID of the requesting app",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shared_secret",
                    "description": "Shared secret",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "750fc16e4401ba9f1432a6400f8499d0",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.failed_webhooks.json",
            "description": "List webhooks that was not delivered to the callback.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "05ba27d0ecb2ebf7b1286b90faccc135",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/account.supported_platforms.json",
            "description": "Get list of supported platforms",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "b8f26728e902be76031b866547f6abd6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.download.file",
            "description": "Download bridge for store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "whitelabel",
                    "description": "Identifies if there is a necessity to download whitelabel bridge.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "bbbfb842fdf0fc4615f0e5432d50cc0f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.update.json",
            "description": "Update bridge in the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "70c249c9289927dc98ed258f3612ea5d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.delete.json",
            "description": "Delete bridge from the store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "8c530597dfc1654458d3226b7faa857f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.list.json",
            "description": "Get list of products from your store. Returns 10 products by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_view",
                    "description": "Specifies the set of visible\/invisible products",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_params",
                    "description": "Set this parameter in order to choose which product variants fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "since_id",
                    "description": "Retrieve products starting from the specified product id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_cache",
                    "description": "Disable cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "27dc9ca3685ac0bdf5eef5454bc5c786",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.count.json",
            "description": "Count products in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_view",
                    "description": "Specifies the set of visible\/invisible products",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "8ae7da740f8ff40caffd3481b2cf20ea",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.info.json",
            "description": "Get product info about product ID *** or specify other product ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_params",
                    "description": "Set this parameter in order to choose which product variants fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "b72977e31d8700fefc2a6a42dbf3709f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.find.json",
            "description": "Search product in store catalog. \"Apple\" is specified here by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_what",
                    "description": "Parameter's value specifies the entity that has to be found",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "011f98f7b9aa41edb11804943054453f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.fields.json",
            "description": "Retrieve all available fields for product item in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "371600bf1b8cfb0b697a8d674ece309e",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.add.json",
            "description": "Add new product to store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "985271c83baa264910d5f3573ceee33d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.update.json",
            "description": "Update price and quantity for a specific product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "model",
                    "description": "Defines product model that has to be updated",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "cost_price",
                    "description": "Defines new product's cost price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "retail_price",
                    "description": "Defines new product's retail price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "increase_quantity",
                    "description": "Defines the incremental changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reduce_quantity",
                    "description": "Defines the decrement changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reserve_quantity",
                    "description": "This parameter allows to reserve\/unreserve product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manage_stock",
                    "description": "Defines inventory tracking for product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer_id",
                    "description": "Defines product's manufacturer by manufacturer_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "in_stock",
                    "description": "Set stock status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "bc951efb12a5a0f1d07b4c289fcf8178",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.delete.json",
            "description": "Product delete",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "9b7d9a829bee52966d6692221b5e18ca",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.add.json",
            "description": "Add some prices to the product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "21d65325cf87ea928ef965bf48ace8d8",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.update.json",
            "description": "Update some prices of the product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "c281edc70560fbe0a509d6777318d9a5",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.price.delete.json",
            "description": "Delete some prices of the product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_prices",
                    "description": "Defines product's group prices",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "2aa8a06183a66641d105b6065125eb77",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.add.json",
            "description": "Add image to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "mime",
                    "description": "Mime type of image http:\/\/en.wikipedia.org\/wiki\/Internet_media_type.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "content",
                    "description": "Content(body) encoded in base64 of image file",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_variant_id",
                    "description": "Defines product's variants specified by variant id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "variant_ids",
                    "description": "Defines product's variants ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "04cf18233bbcea26c6e7c671915b1f4e",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.update.json",
            "description": "Update details of image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "hidden",
                    "description": "Define is hide image",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "c90b30060978a9b3d8092f9be53aeda0",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.image.delete.json",
            "description": "Delete image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "457e6cd530eba0282abf6d50d6b971ad",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.list.json",
            "description": "Get list of categories from store. Returns 4 categories by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "1adbfd75fc210c51d5ccfd280f44d0bf",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.count.json",
            "description": "Count categories in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "e37dd906fedeeab016b08b429a1823e6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.info.json",
            "description": "Get category info about category ID*** or specify other category ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "ea3370a409a033f48c359c261cea11dc",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.find.json",
            "description": "Search category in store. \"Laptop\" is specified here by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "fbecccab2d4aa19075c3ad413780d7c0",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.add.json",
            "description": "Add new category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "stores_ids",
                    "description": "Create category in the stores that is specified by comma-separated stores' id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_time",
                    "description": "Entity's date creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_time",
                    "description": "Entity's date modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "e94708816a107a9d7d365784558bf55f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.update.json",
            "description": "Update category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "parent_id",
                    "description": "Retrieves categories specified by parent id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "stores_ids",
                    "description": "Create category in the stores that is specified by comma-separated stores' id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_time",
                    "description": "Entity's date modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "seo_url",
                    "description": "Defines unique URL for SEO",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "360beff413e58827cd6cd3252f712143",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.delete.json",
            "description": "Delete category in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "0819aa5eaa79d44388b4366ab138224f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.assign.json",
            "description": "Assign category to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "c03d60ff12eaecb5ed131c975065b4b6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.unassign.json",
            "description": "Unassign category to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "136b2fc986fa59e3205cb53eeb41506d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.image.add.json",
            "description": "Add image to category",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_name",
                    "description": "Defines image's name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "label",
                    "description": "The name you give to the webhook",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "mime",
                    "description": "Mime type of image http:\/\/en.wikipedia.org\/wiki\/Internet_media_type.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "39ed8f3ed843f15d33d99b98c98a56ef",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/category.image.delete.json",
            "description": "Delete image",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "image_id",
                    "description": "Define image id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "3f5b5f08416c76b7e09cc9d1d9304c0f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.count.json",
            "description": "Count orders in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_ids",
                    "description": "Counts orders specified by order ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fulfillment_status",
                    "description": "Create order with fulfillment status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shipping_method",
                    "description": "Retrieve entities according to shipping method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "99e501f9d6cdd9d668539c9a1f4e5129",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.list.json",
            "description": "Get list of orders from store. Returns 4 orders by default.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_ids",
                    "description": "Counts orders specified by order ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "basket_id",
                    "description": "Retrieves order\u2019s info specified by basket id.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fulfillment_status",
                    "description": "Create order with fulfillment status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "shipping_method",
                    "description": "Retrieve entities according to shipping method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "skip_order_ids",
                    "description": "Skipped orders by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "455932f829dfa1850e806f956a12954c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.info.json",
            "description": "Info about a specific order by ID",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "8f7943bd1c0ea65247e1978d395fe037",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.find.json",
            "description": "Find orders",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "1d8be8854439e53844547f26014c4f3c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.add.json",
            "description": "Add a new order to the cart.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "24276242ec3557cde7ee9e8bba10f391",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.update.json",
            "description": "Update existing order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_status",
                    "description": "Counts orders quantity specified by order status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "comment",
                    "description": "Specifies order comment",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_modified",
                    "description": "Specifies order's  modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "date_finished",
                    "description": "Specifies order's  finished date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "financial_status",
                    "description": "Counts orders quantity specified by financial status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order_payment_method",
                    "description": "Defines order payment method",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "send_notifications",
                    "description": "Send notifications to customer after order was created",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "2f55a481af4d9ad6a93efd393a2f2a45",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.status.list.json",
            "description": "Retrieve list of statuses",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "35de05e30a2be98e3b0e04c7593feb2a",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.financial_status.list.json",
            "description": "Retrieve list of financial statuses",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "402b94be6e6b23c1aa970ba234eb87d2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.abandoned.list.json",
            "description": "Get list of orders that were left by customers before completing the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_email",
                    "description": "Counts orders quantity specified by customer email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "skip_empty_email",
                    "description": "Filter empty emails",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "ed1eb0fd90742d812fa259f9f76874be",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.list.json",
            "description": "Get list of shipments by orders.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "order_id",
                    "description": "Retrieves order\u2019s info specified by order id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "16d5e6e43e8229d06a81ee8d0c8c9a1b",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.add.json",
            "description": "Add a shipment to the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "62e53a08a1acbb6998f2329e6bc38c84",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.update.json",
            "description": "Update order's shipment information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "100fe04fdb719832f55c5b08b151e36c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.shipment.tracking.add.json",
            "description": "Add order shipment's tracking info.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "06ef454c1171020a404ae1dd3815958e",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/order.refund.add.json",
            "description": "Add a refund to the order.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "2da12514d02191c987b1da9179edd0f9",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.list.json",
            "description": "Retrieve a list of live shipping rate services. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "bf674fa47d26725fa187aa701e1a2f78",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.info.json",
            "description": "Retrieve basket information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "d2084555d3490a6fd424eb89e66d4e2d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.create.json",
            "description": "Create live shipping rate service. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "callback",
                    "description": "Callback where the webhook should send the POST request when the event occurs",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "99032e114b9b679a42adcee7215d2387",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.live_shipping_service.delete.json",
            "description": "Delete live shipping rate service. (Beta)",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "a4784a4353685c26ec699081704151d8",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.list.json",
            "description": "Get list of customers from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_list_id",
                    "description": "The numeric ID of the customer list in Demandware.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "4a559a7537187ffb93e2c4b6dd224cce",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.count.json",
            "description": "Get number of customers from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "customer_list_id",
                    "description": "The numeric ID of the customer list in Demandware.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "cb7261c5ba7c665aa87e07af83270186",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.info.json",
            "description": "Get customers' details from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "856ca90e517f84cba152e65173e46e4f",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.find.json",
            "description": "Find customers in store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "f64574628f3645247fd1a7fc979b977a",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/customer.add.json",
            "description": "Add customer into store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "d38e0ae2218e21af5ebdf244e8e112e6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.list.json",
            "description": "Get attributes list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_ids",
                    "description": "Filter attributes by ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "system",
                    "description": "True if attribute is system",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "ae66bed411ae33df94bba20cc60ea258",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.info.json",
            "description": "Get attribute info",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "6c6a616176f482c4b44bca82fddb7967",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.count.json",
            "description": "Get attributes count",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "0a59b1eb6264364734a0232d9c82caba",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.type.list.json",
            "description": "Get list of supported attributes types",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "440ebaf4c55d7327b8da1be403a7cad6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.delete.json",
            "description": "Delete attribute from store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "801fc2ff62bbaf1f8a5580bbda492549",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.add.json",
            "description": "Add new attribute",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "position",
                    "description": "Defines image\u2019s position in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_global",
                    "description": "Attribute saving scope",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_searchable",
                    "description": "Use attribute in Quick Search",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_filterable",
                    "description": "Use In Layered Navigation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_comparable",
                    "description": "Comparable on Front-end",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_html_allowed_on_front",
                    "description": "Allow HTML Tags on Frontend",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_filterable_in_search",
                    "description": "Use In Search Results Layered Navigation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_configurable",
                    "description": "Use To Create Configurable Product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_visible_in_advanced_search",
                    "description": "Use in Advanced Search",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "is_used_for_promo_rules",
                    "description": "Use for Promo Rule Conditions",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "used_in_product_listing",
                    "description": "Used in Product Listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "used_for_sort_by",
                    "description": "Used for Sorting in Product Listing",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "apply_to",
                    "description": "Types of products which can have this attribute",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "abc7e06602c5aed3613682e6a7dbdc27",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.assign.group.json",
            "description": "Assign attribute to the group",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "7eda2a6d3f5ffa4cc3dbba7f39f4b08c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.assign.set.json",
            "description": "Assign attribute to the attribute set",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "7795d820dff4e68cc1aab31dbb3ae4a2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.unassign.group.json",
            "description": "Unassign attribute from group",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_id",
                    "description": "Customer group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "ec7a6c6921480d257afcdce8104627a6",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.unassign.set.json",
            "description": "Unassign attribute from attribute set",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "5f87c21080f5a737f9961bfd9e84b0d1",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.group.list.json",
            "description": "Get attribute group list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_set_id",
                    "description": "Attribute set id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "49fe853dbe82559b5a987e6b65c8cb1c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/attribute.attributeset.list.json",
            "description": "Get attribute_set list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "86f459e964a172e1daea71034d529234",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.attribute.list.json",
            "description": "Get list of attributes.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Set field to sort by",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_direction",
                    "description": "Set sorting direction",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_id",
                    "description": "Retrieves info for specified attribute_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_group_id",
                    "description": "Filter by attribute_group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "set_name",
                    "description": "Retrieves attributes specified by set_name in Magento",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "59cd4033b68fce8dfb1cfc48d4c7153d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.attribute.value.set.json",
            "description": "Set attribute value to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_id",
                    "description": "Retrieves info for specified attribute_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_group_id",
                    "description": "Filter by attribute_group_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribute_name",
                    "description": "Define attribute name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value",
                    "description": "Defines condition value, can be comma separated according to the operator.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "value_id",
                    "description": "Define attribute value id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "327ad3ec7c2fb433f7673a99765a2516",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.add.json",
            "description": "Add product option from store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "Defines image's types that are specified by comma-separated list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_values",
                    "description": "Defines option values that has to be added in Magento",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "required",
                    "description": "Defines if the option is required",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "cb4d54e8f9ead562880789b1e1f5f1e5",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.list.json",
            "description": "Get list of options.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "a920c9b4be19921ec6fa0f042afe4865",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.assign.json",
            "description": "Assign option from product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_id",
                    "description": "Defines option id which has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "55c8c1c4eee3c08d56a3c765a451841b",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.add.json",
            "description": "Add product option item from option.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "option_id",
                    "description": "Defines option id which has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_value",
                    "description": "Defines option value that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_order",
                    "description": "Sort number in the list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "f1a05717ba059fe4d43f6544617a5c9b",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.assign.json",
            "description": "Assign product option item from product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_option_id",
                    "description": "Defines product's option id where the value has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "option_value_id",
                    "description": "Defines value id that has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "ba808ec9d67c659defeb43be822a5f5e",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.option.value.update.json",
            "description": "Update product option item from option.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "option_value_id",
                    "description": "Defines value id that has to be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "3f5b5d350b8151aacf750bec02baac6c",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.review.list.json",
            "description": "Get reviews of a specific product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "List of \u0441omma-separated webhook ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "2316dd8c07b0df733cc33dae99ab44c2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.add.json",
            "description": "Add variant to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "model",
                    "description": "Defines product model that has to be updated",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attributes",
                    "description": "Defines variant's attributes list",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_modified",
                    "description": "Defines the date of special price modification",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "available_for_view",
                    "description": "Specifies the set of visible\/invisible product's variants for users",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "available_for_sale",
                    "description": "Specifies the set of visible\/invisible product's variants for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_at",
                    "description": "Defines the date of entity creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tax_class_id",
                    "description": "Defines tax classes where entity has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "Defines URL of the image that has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "e8e8615088136933dc9e821353dc7f9d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.info.json",
            "description": "Get child for specific product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "96f2cfb6827b84e9dc9eaf4c67a99206",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.list.json",
            "description": "Get child items list of specific product(s).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_ids",
                    "description": "Retrieves products specified by product ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "currency_id",
                    "description": "Currency Id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail_sale",
                    "description": "Specifies the set of available\/not available products for sale",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "report_request_id",
                    "description": "Report request id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "disable_report_cache",
                    "description": "Disable report cache for current request",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "d61c4319c3cbb1ebd7499c5b91063aa7",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.child_item.find.json",
            "description": "Search product child item (bundled item or configurable product variant) in store catalog.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "find_value",
                    "description": "Entity search that is specified by some value",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_where",
                    "description": "Entity search that is specified by the comma-separated unique fields",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "find_params",
                    "description": "Entity search that is specified by comma-separated parameters",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "5e777064defbd2801a9ecc5a1041e798",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.list.json",
            "description": "Get list variants.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "439ae784389d6d02a4bb2130d3e3ac82",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.info.json",
            "description": "Get variant info.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "6cc096bab4be0579d6d4cfb46b1b3e34",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.count.json",
            "description": "Get count variants.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_id",
                    "description": "Retrieves products specified by category id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "f12f6b64b93841e158ede28b1aab61e7",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.update.json",
            "description": "Update variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "warehouse_id",
                    "description": "This parameter is used for selecting a warehouse where you need to set\/modify a product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reserve_quantity",
                    "description": "This parameter allows to reserve\/unreserve product quantity.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "increase_quantity",
                    "description": "Defines the incremental changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "reduce_quantity",
                    "description": "Defines the decrement changes in product quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "price",
                    "description": "Defines new product's price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "special_price",
                    "description": "Defines new product's special price",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_create",
                    "description": "Defines the date of special price creation",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sprice_expire",
                    "description": "Defines the term of special price offer duration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manage_stock",
                    "description": "Defines inventory tracking for product",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "in_stock",
                    "description": "Set stock status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "description",
                    "description": "The user-friendly description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sku",
                    "description": "Filter by product's sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_title",
                    "description": "Defines unique meta title for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_description",
                    "description": "Defines unique meta description of a entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "meta_keywords",
                    "description": "Defines unique meta keywords for each entity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "short_description",
                    "description": "Defines short description",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "visible",
                    "description": "Set visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "status",
                    "description": "Defines product's status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "weight",
                    "description": "Weight",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "e76ba342d7dbc28388f0fd2e1cdad9c3",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.delete.json",
            "description": "Delete variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "d518c18bba4e61f81b6b19a86cb027c5",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.add.json",
            "description": "Add some prices to the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "7de99e75bdcda1b16c0ca4326526e4cd",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.update.json",
            "description": "Update some prices of the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "66bdbb93e8b4d01e709c1f43209927c2",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.variant.price.delete.json",
            "description": "Delete some prices of the product variant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Webhook id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group_prices",
                    "description": "Defines product's group prices",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "d104f54eaf73b4581d50b3e52485a568",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.tax.add.json",
            "description": "Add tax class and tax rate to store and assign to product.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "d89717d833c8d8b6c1f43dc570a499db",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.manufacturer.add.json",
            "description": "Add manufacturer to store and assign to product",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "manufacturer",
                    "description": "Defines product's manufacturer",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "8dd1577a3e397c89a527ffba3fe05522",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.brand.list.json",
            "description": "Get list of brands from your store.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "brand_ids",
                    "description": "Retrieves brands specified by brand ids",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "lang_id",
                    "description": "Language id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_from",
                    "description": "Retrieve entities from their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "created_to",
                    "description": "Retrieve entities to their creation date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_from",
                    "description": "Retrieve entities from their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "modified_to",
                    "description": "Retrieve entities to their modification date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "6040b73a9f374f2c902170a6a17d652d",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.currency.add.json",
            "description": "Add currency and\/or set default in store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "iso3",
                    "description": "Specifies standardized currency code",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "rate",
                    "description": "Defines the numerical identifier against to the major currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "Coupon name",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "symbol_left",
                    "description": "Defines the symbol that is located before the currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "symbol_right",
                    "description": "Defines the symbol that is located after the currency",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "default",
                    "description": "Specifies currency's default meaning",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "f7301f45ab6b8d5a2c7ee861d61a2499",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.currency.list.json",
            "description": "Get list of currencies",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "default",
                    "description": "Specifies currency's default meaning",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "avail",
                    "description": "Defines category's visibility status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "141f26b86f50825798fe07afd484ef85",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/product.store.assign.json",
            "description": "Assign product to store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "bb019afd19a1bd9fb7eaa8a65c4ad27e",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/tax.class.info.json",
            "description": "Get info about tax",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "tax_class_id",
                    "description": "Defines tax classes where entity has to be added",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "bced37308726f4cfbcca5397d0832d96",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/basket.item.add.json",
            "description": "Add item to basket",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "customer_id",
                    "description": "Counts orders quantity specified by customer id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "product_id",
                    "description": "Defines the product where the price has to be deleted",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "variant_id",
                    "description": "Defines product's variants specified by variant id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "quantity",
                    "description": "Defines new product's quantity",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "d370c0ff5e41e081790d468aa0e83bbf",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/subscriber.list.json",
            "description": "Get subscribers list",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "start",
                    "description": "This parameter sets the number from which you want to get entities",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "count",
                    "description": "This parameter sets the entity amount that has to be retrieved. Max allowed count=250",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "subscribed",
                    "description": "Filter by subscription status",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "store_id",
                    "description": "Defines store id where the webhook should be assigned",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "email",
                    "description": "Filter subscribers by email",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "params",
                    "description": "Set this parameter in order to choose which entity fields you want to retrieve",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "exclude",
                    "description": "Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter `params` equal force_all",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        },
        {
            "id": "b73f0cf4c26344bc206339669fe9bf44",
            "name": "",
            "url": "http:\/\/api.api2cart.com\/v1.1\/bridge.download.json",
            "description": "Download bridge for store",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "75399631a0558eec7b934aca3758cd60",
            "rawModeData": ""
        }
    ]
}